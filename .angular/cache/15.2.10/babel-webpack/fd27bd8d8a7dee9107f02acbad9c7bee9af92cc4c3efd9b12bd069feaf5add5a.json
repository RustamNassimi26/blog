{"ast":null,"code":"var _asyncToGenerator = require(\"I:/Angular/angular-blog/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nconst {\n  readdir\n} = require('fs/promises');\nconst {\n  join\n} = require('path');\nconst readdirScoped = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (dir) {\n    const results = [];\n    for (const item of yield readdir(dir)) {\n      if (item.startsWith('@')) {\n        for (const scopedItem of yield readdir(join(dir, item))) {\n          results.push(join(item, scopedItem));\n        }\n      } else {\n        results.push(item);\n      }\n    }\n    return results;\n  });\n  return function readdirScoped(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nmodule.exports = readdirScoped;","map":{"version":3,"names":["readdir","require","join","readdirScoped","dir","results","item","startsWith","scopedItem","push","module","exports"],"sources":["I:/Angular/angular-blog/node_modules/@npmcli/fs/lib/readdir-scoped.js"],"sourcesContent":["const { readdir } = require('fs/promises')\nconst { join } = require('path')\n\nconst readdirScoped = async (dir) => {\n  const results = []\n\n  for (const item of await readdir(dir)) {\n    if (item.startsWith('@')) {\n      for (const scopedItem of await readdir(join(dir, item))) {\n        results.push(join(item, scopedItem))\n      }\n    } else {\n      results.push(item)\n    }\n  }\n\n  return results\n}\n\nmodule.exports = readdirScoped\n"],"mappings":";AAAA,MAAM;EAAEA;AAAQ,CAAC,GAAGC,OAAO,CAAC,aAAa,CAAC;AAC1C,MAAM;EAAEC;AAAK,CAAC,GAAGD,OAAO,CAAC,MAAM,CAAC;AAEhC,MAAME,aAAa;EAAA,6BAAG,WAAOC,GAAG,EAAK;IACnC,MAAMC,OAAO,GAAG,EAAE;IAElB,KAAK,MAAMC,IAAI,UAAUN,OAAO,CAACI,GAAG,CAAC,EAAE;MACrC,IAAIE,IAAI,CAACC,UAAU,CAAC,GAAG,CAAC,EAAE;QACxB,KAAK,MAAMC,UAAU,UAAUR,OAAO,CAACE,IAAI,CAACE,GAAG,EAAEE,IAAI,CAAC,CAAC,EAAE;UACvDD,OAAO,CAACI,IAAI,CAACP,IAAI,CAACI,IAAI,EAAEE,UAAU,CAAC,CAAC;QACtC;MACF,CAAC,MAAM;QACLH,OAAO,CAACI,IAAI,CAACH,IAAI,CAAC;MACpB;IACF;IAEA,OAAOD,OAAO;EAChB,CAAC;EAAA,gBAdKF,aAAa;IAAA;EAAA;AAAA,GAclB;AAEDO,MAAM,CAACC,OAAO,GAAGR,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}