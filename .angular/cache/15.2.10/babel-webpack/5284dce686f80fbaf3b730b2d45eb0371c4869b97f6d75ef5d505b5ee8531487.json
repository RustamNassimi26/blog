{"ast":null,"code":"#!/usr/bin/env node\n'use strict';\n\nprocess.title = 'node-gyp';\nconst envPaths = require('env-paths');\nconst gyp = require('../');\nconst log = require('npmlog');\nconst os = require('os');\n\n/**\n * Process and execute the selected commands.\n */\n\nconst prog = gyp();\nvar completed = false;\nprog.parseArgv(process.argv);\nprog.devDir = prog.opts.devdir;\nvar homeDir = os.homedir();\nif (prog.devDir) {\n  prog.devDir = prog.devDir.replace(/^~/, homeDir);\n} else if (homeDir) {\n  prog.devDir = envPaths('node-gyp', {\n    suffix: ''\n  }).cache;\n} else {\n  throw new Error(\"node-gyp requires that the user's home directory is specified \" + 'in either of the environmental variables HOME or USERPROFILE. ' + 'Overide with: --devdir /path/to/.node-gyp');\n}\nif (prog.todo.length === 0) {\n  if (~process.argv.indexOf('-v') || ~process.argv.indexOf('--version')) {\n    console.log('v%s', prog.version);\n  } else {\n    console.log('%s', prog.usage());\n  }\n  process.exit(0);\n}\nlog.info('it worked if it ends with', 'ok');\nlog.verbose('cli', process.argv);\nlog.info('using', 'node-gyp@%s', prog.version);\nlog.info('using', 'node@%s | %s | %s', process.versions.node, process.platform, process.arch);\n\n/**\n * Change dir if -C/--directory was passed.\n */\n\nvar dir = prog.opts.directory;\nif (dir) {\n  var fs = require('fs');\n  try {\n    var stat = fs.statSync(dir);\n    if (stat.isDirectory()) {\n      log.info('chdir', dir);\n      process.chdir(dir);\n    } else {\n      log.warn('chdir', dir + ' is not a directory');\n    }\n  } catch (e) {\n    if (e.code === 'ENOENT') {\n      log.warn('chdir', dir + ' is not a directory');\n    } else {\n      log.warn('chdir', 'error during chdir() \"%s\"', e.message);\n    }\n  }\n}\nfunction run() {\n  var command = prog.todo.shift();\n  if (!command) {\n    // done!\n    completed = true;\n    log.info('ok');\n    return;\n  }\n  prog.commands[command.name](command.args, function (err) {\n    if (err) {\n      log.error(command.name + ' error');\n      log.error('stack', err.stack);\n      errorMessage();\n      log.error('not ok');\n      return process.exit(1);\n    }\n    if (command.name === 'list') {\n      var versions = arguments[1];\n      if (versions.length > 0) {\n        versions.forEach(function (version) {\n          console.log(version);\n        });\n      } else {\n        console.log('No node development files installed. Use `node-gyp install` to install a version.');\n      }\n    } else if (arguments.length >= 2) {\n      console.log.apply(console, [].slice.call(arguments, 1));\n    }\n\n    // now run the next command in the queue\n    process.nextTick(run);\n  });\n}\nprocess.on('exit', function (code) {\n  if (!completed && !code) {\n    log.error('Completion callback never invoked!');\n    issueMessage();\n    process.exit(6);\n  }\n});\nprocess.on('uncaughtException', function (err) {\n  log.error('UNCAUGHT EXCEPTION');\n  log.error('stack', err.stack);\n  issueMessage();\n  process.exit(7);\n});\nfunction errorMessage() {\n  // copied from npm's lib/utils/error-handler.js\n  var os = require('os');\n  log.error('System', os.type() + ' ' + os.release());\n  log.error('command', process.argv.map(JSON.stringify).join(' '));\n  log.error('cwd', process.cwd());\n  log.error('node -v', process.version);\n  log.error('node-gyp -v', 'v' + prog.package.version);\n}\nfunction issueMessage() {\n  errorMessage();\n  log.error('', ['Node-gyp failed to build your package.', 'Try to update npm and/or node-gyp and if it does not help file an issue with the package author.'].join('\\n'));\n}\n\n// start running the given commands!\nrun();","map":{"version":3,"names":["process","title","envPaths","require","gyp","log","os","prog","completed","parseArgv","argv","devDir","opts","devdir","homeDir","homedir","replace","suffix","cache","Error","todo","length","indexOf","console","version","usage","exit","info","verbose","versions","node","platform","arch","dir","directory","fs","stat","statSync","isDirectory","chdir","warn","e","code","message","run","command","shift","commands","name","args","err","error","stack","errorMessage","arguments","forEach","apply","slice","call","nextTick","on","issueMessage","type","release","map","JSON","stringify","join","cwd","package"],"sources":["I:/Angular/angular-blog/node_modules/node-gyp/bin/node-gyp.js"],"sourcesContent":["#!/usr/bin/env node\n\n'use strict'\n\nprocess.title = 'node-gyp'\n\nconst envPaths = require('env-paths')\nconst gyp = require('../')\nconst log = require('npmlog')\nconst os = require('os')\n\n/**\n * Process and execute the selected commands.\n */\n\nconst prog = gyp()\nvar completed = false\nprog.parseArgv(process.argv)\nprog.devDir = prog.opts.devdir\n\nvar homeDir = os.homedir()\nif (prog.devDir) {\n  prog.devDir = prog.devDir.replace(/^~/, homeDir)\n} else if (homeDir) {\n  prog.devDir = envPaths('node-gyp', { suffix: '' }).cache\n} else {\n  throw new Error(\n    \"node-gyp requires that the user's home directory is specified \" +\n    'in either of the environmental variables HOME or USERPROFILE. ' +\n    'Overide with: --devdir /path/to/.node-gyp')\n}\n\nif (prog.todo.length === 0) {\n  if (~process.argv.indexOf('-v') || ~process.argv.indexOf('--version')) {\n    console.log('v%s', prog.version)\n  } else {\n    console.log('%s', prog.usage())\n  }\n  process.exit(0)\n}\n\nlog.info('it worked if it ends with', 'ok')\nlog.verbose('cli', process.argv)\nlog.info('using', 'node-gyp@%s', prog.version)\nlog.info('using', 'node@%s | %s | %s', process.versions.node, process.platform, process.arch)\n\n/**\n * Change dir if -C/--directory was passed.\n */\n\nvar dir = prog.opts.directory\nif (dir) {\n  var fs = require('fs')\n  try {\n    var stat = fs.statSync(dir)\n    if (stat.isDirectory()) {\n      log.info('chdir', dir)\n      process.chdir(dir)\n    } else {\n      log.warn('chdir', dir + ' is not a directory')\n    }\n  } catch (e) {\n    if (e.code === 'ENOENT') {\n      log.warn('chdir', dir + ' is not a directory')\n    } else {\n      log.warn('chdir', 'error during chdir() \"%s\"', e.message)\n    }\n  }\n}\n\nfunction run () {\n  var command = prog.todo.shift()\n  if (!command) {\n    // done!\n    completed = true\n    log.info('ok')\n    return\n  }\n\n  prog.commands[command.name](command.args, function (err) {\n    if (err) {\n      log.error(command.name + ' error')\n      log.error('stack', err.stack)\n      errorMessage()\n      log.error('not ok')\n      return process.exit(1)\n    }\n    if (command.name === 'list') {\n      var versions = arguments[1]\n      if (versions.length > 0) {\n        versions.forEach(function (version) {\n          console.log(version)\n        })\n      } else {\n        console.log('No node development files installed. Use `node-gyp install` to install a version.')\n      }\n    } else if (arguments.length >= 2) {\n      console.log.apply(console, [].slice.call(arguments, 1))\n    }\n\n    // now run the next command in the queue\n    process.nextTick(run)\n  })\n}\n\nprocess.on('exit', function (code) {\n  if (!completed && !code) {\n    log.error('Completion callback never invoked!')\n    issueMessage()\n    process.exit(6)\n  }\n})\n\nprocess.on('uncaughtException', function (err) {\n  log.error('UNCAUGHT EXCEPTION')\n  log.error('stack', err.stack)\n  issueMessage()\n  process.exit(7)\n})\n\nfunction errorMessage () {\n  // copied from npm's lib/utils/error-handler.js\n  var os = require('os')\n  log.error('System', os.type() + ' ' + os.release())\n  log.error('command', process.argv\n    .map(JSON.stringify).join(' '))\n  log.error('cwd', process.cwd())\n  log.error('node -v', process.version)\n  log.error('node-gyp -v', 'v' + prog.package.version)\n}\n\nfunction issueMessage () {\n  errorMessage()\n  log.error('', ['Node-gyp failed to build your package.',\n    'Try to update npm and/or node-gyp and if it does not help file an issue with the package author.'\n  ].join('\\n'))\n}\n\n// start running the given commands!\nrun()\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}