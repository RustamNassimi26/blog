{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NodeModulesTestEngineHost = void 0;\nconst node_module_engine_host_1 = require(\"./node-module-engine-host\");\n/**\n * An EngineHost that uses a registry to super seed locations of collection.json files, but\n * revert back to using node modules resolution. This is done for testing.\n */\nclass NodeModulesTestEngineHost extends node_module_engine_host_1.NodeModulesEngineHost {\n  constructor() {\n    super(...arguments);\n    this._collections = new Map();\n    this._tasks = [];\n  }\n  get tasks() {\n    return this._tasks;\n  }\n  clearTasks() {\n    this._tasks = [];\n  }\n  registerCollection(name, path) {\n    this._collections.set(name, path);\n  }\n  transformContext(context) {\n    const oldAddTask = context.addTask;\n    context.addTask = (task, dependencies) => {\n      this._tasks.push(task.toConfiguration());\n      return oldAddTask.call(context, task, dependencies);\n    };\n    return context;\n  }\n  _resolveCollectionPath(name, requester) {\n    const maybePath = this._collections.get(name);\n    if (maybePath) {\n      return maybePath;\n    }\n    return super._resolveCollectionPath(name, requester);\n  }\n}\nexports.NodeModulesTestEngineHost = NodeModulesTestEngineHost;","map":{"version":3,"names":["Object","defineProperty","exports","value","NodeModulesTestEngineHost","node_module_engine_host_1","require","NodeModulesEngineHost","constructor","arguments","_collections","Map","_tasks","tasks","clearTasks","registerCollection","name","path","set","transformContext","context","oldAddTask","addTask","task","dependencies","push","toConfiguration","call","_resolveCollectionPath","requester","maybePath","get"],"sources":["I:/Angular/angular-blog/node_modules/@angular-devkit/schematics/tools/node-modules-test-engine-host.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeModulesTestEngineHost = void 0;\nconst node_module_engine_host_1 = require(\"./node-module-engine-host\");\n/**\n * An EngineHost that uses a registry to super seed locations of collection.json files, but\n * revert back to using node modules resolution. This is done for testing.\n */\nclass NodeModulesTestEngineHost extends node_module_engine_host_1.NodeModulesEngineHost {\n    constructor() {\n        super(...arguments);\n        this._collections = new Map();\n        this._tasks = [];\n    }\n    get tasks() {\n        return this._tasks;\n    }\n    clearTasks() {\n        this._tasks = [];\n    }\n    registerCollection(name, path) {\n        this._collections.set(name, path);\n    }\n    transformContext(context) {\n        const oldAddTask = context.addTask;\n        context.addTask = (task, dependencies) => {\n            this._tasks.push(task.toConfiguration());\n            return oldAddTask.call(context, task, dependencies);\n        };\n        return context;\n    }\n    _resolveCollectionPath(name, requester) {\n        const maybePath = this._collections.get(name);\n        if (maybePath) {\n            return maybePath;\n        }\n        return super._resolveCollectionPath(name, requester);\n    }\n}\nexports.NodeModulesTestEngineHost = NodeModulesTestEngineHost;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,yBAAyB,GAAG,KAAK,CAAC;AAC1C,MAAMC,yBAAyB,GAAGC,OAAO,CAAC,2BAA2B,CAAC;AACtE;AACA;AACA;AACA;AACA,MAAMF,yBAAyB,SAASC,yBAAyB,CAACE,qBAAqB,CAAC;EACpFC,WAAW,GAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB,IAAI,CAACC,YAAY,GAAG,IAAIC,GAAG,EAAE;IAC7B,IAAI,CAACC,MAAM,GAAG,EAAE;EACpB;EACA,IAAIC,KAAK,GAAG;IACR,OAAO,IAAI,CAACD,MAAM;EACtB;EACAE,UAAU,GAAG;IACT,IAAI,CAACF,MAAM,GAAG,EAAE;EACpB;EACAG,kBAAkB,CAACC,IAAI,EAAEC,IAAI,EAAE;IAC3B,IAAI,CAACP,YAAY,CAACQ,GAAG,CAACF,IAAI,EAAEC,IAAI,CAAC;EACrC;EACAE,gBAAgB,CAACC,OAAO,EAAE;IACtB,MAAMC,UAAU,GAAGD,OAAO,CAACE,OAAO;IAClCF,OAAO,CAACE,OAAO,GAAG,CAACC,IAAI,EAAEC,YAAY,KAAK;MACtC,IAAI,CAACZ,MAAM,CAACa,IAAI,CAACF,IAAI,CAACG,eAAe,EAAE,CAAC;MACxC,OAAOL,UAAU,CAACM,IAAI,CAACP,OAAO,EAAEG,IAAI,EAAEC,YAAY,CAAC;IACvD,CAAC;IACD,OAAOJ,OAAO;EAClB;EACAQ,sBAAsB,CAACZ,IAAI,EAAEa,SAAS,EAAE;IACpC,MAAMC,SAAS,GAAG,IAAI,CAACpB,YAAY,CAACqB,GAAG,CAACf,IAAI,CAAC;IAC7C,IAAIc,SAAS,EAAE;MACX,OAAOA,SAAS;IACpB;IACA,OAAO,KAAK,CAACF,sBAAsB,CAACZ,IAAI,EAAEa,SAAS,CAAC;EACxD;AACJ;AACA3B,OAAO,CAACE,yBAAyB,GAAGA,yBAAyB"},"metadata":{},"sourceType":"script","externalDependencies":[]}