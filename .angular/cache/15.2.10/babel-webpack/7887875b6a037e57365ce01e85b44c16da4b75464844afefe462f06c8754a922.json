{"ast":null,"code":"'use strict';\n\nconst npa = require('npm-package-arg');\nconst semver = require('semver');\nconst {\n  checkEngine\n} = require('npm-install-checks');\nconst normalizeBin = require('npm-normalize-package-bin');\nconst engineOk = (manifest, npmVersion, nodeVersion) => {\n  try {\n    checkEngine(manifest, npmVersion, nodeVersion);\n    return true;\n  } catch (_) {\n    return false;\n  }\n};\nconst isBefore = (verTimes, ver, time) => !verTimes || !verTimes[ver] || Date.parse(verTimes[ver]) <= time;\nconst avoidSemverOpt = {\n  includePrerelease: true,\n  loose: true\n};\nconst shouldAvoid = (ver, avoid) => avoid && semver.satisfies(ver, avoid, avoidSemverOpt);\nconst decorateAvoid = (result, avoid) => result && shouldAvoid(result.version, avoid) ? {\n  ...result,\n  _shouldAvoid: true\n} : result;\nconst pickManifest = (packument, wanted, opts) => {\n  const {\n    defaultTag = 'latest',\n    before = null,\n    nodeVersion = process.version,\n    npmVersion = null,\n    includeStaged = false,\n    avoid = null,\n    avoidStrict = false\n  } = opts;\n  const {\n    name,\n    time: verTimes\n  } = packument;\n  const versions = packument.versions || {};\n  if (avoidStrict) {\n    const looseOpts = {\n      ...opts,\n      avoidStrict: false\n    };\n    const result = pickManifest(packument, wanted, looseOpts);\n    if (!result || !result._shouldAvoid) {\n      return result;\n    }\n    const caret = pickManifest(packument, `^${result.version}`, looseOpts);\n    if (!caret || !caret._shouldAvoid) {\n      return {\n        ...caret,\n        _outsideDependencyRange: true,\n        _isSemVerMajor: false\n      };\n    }\n    const star = pickManifest(packument, '*', looseOpts);\n    if (!star || !star._shouldAvoid) {\n      return {\n        ...star,\n        _outsideDependencyRange: true,\n        _isSemVerMajor: true\n      };\n    }\n    throw Object.assign(new Error(`No avoidable versions for ${name}`), {\n      code: 'ETARGET',\n      name,\n      wanted,\n      avoid,\n      before,\n      versions: Object.keys(versions)\n    });\n  }\n  const staged = includeStaged && packument.stagedVersions && packument.stagedVersions.versions || {};\n  const restricted = packument.policyRestrictions && packument.policyRestrictions.versions || {};\n  const time = before && verTimes ? +new Date(before) : Infinity;\n  const spec = npa.resolve(name, wanted || defaultTag);\n  const type = spec.type;\n  const distTags = packument['dist-tags'] || {};\n  if (type !== 'tag' && type !== 'version' && type !== 'range') {\n    throw new Error('Only tag, version, and range are supported');\n  }\n\n  // if the type is 'tag', and not just the implicit default, then it must\n  // be that exactly, or nothing else will do.\n  if (wanted && type === 'tag') {\n    const ver = distTags[wanted];\n    // if the version in the dist-tags is before the before date, then\n    // we use that.  Otherwise, we get the highest precedence version\n    // prior to the dist-tag.\n    if (isBefore(verTimes, ver, time)) {\n      return decorateAvoid(versions[ver] || staged[ver] || restricted[ver], avoid);\n    } else {\n      return pickManifest(packument, `<=${ver}`, opts);\n    }\n  }\n\n  // similarly, if a specific version, then only that version will do\n  if (wanted && type === 'version') {\n    const ver = semver.clean(wanted, {\n      loose: true\n    });\n    const mani = versions[ver] || staged[ver] || restricted[ver];\n    return isBefore(verTimes, ver, time) ? decorateAvoid(mani, avoid) : null;\n  }\n\n  // ok, sort based on our heuristics, and pick the best fit\n  const range = type === 'range' ? wanted : '*';\n\n  // if the range is *, then we prefer the 'latest' if available\n  // but skip this if it should be avoided, in that case we have\n  // to try a little harder.\n  const defaultVer = distTags[defaultTag];\n  if (defaultVer && (range === '*' || semver.satisfies(defaultVer, range, {\n    loose: true\n  })) && !shouldAvoid(defaultVer, avoid)) {\n    const mani = versions[defaultVer];\n    if (mani && isBefore(verTimes, defaultVer, time)) {\n      return mani;\n    }\n  }\n\n  // ok, actually have to sort the list and take the winner\n  const allEntries = Object.entries(versions).concat(Object.entries(staged)).concat(Object.entries(restricted)).filter(([ver, mani]) => isBefore(verTimes, ver, time));\n  if (!allEntries.length) {\n    throw Object.assign(new Error(`No versions available for ${name}`), {\n      code: 'ENOVERSIONS',\n      name,\n      type,\n      wanted,\n      before,\n      versions: Object.keys(versions)\n    });\n  }\n  const sortSemverOpt = {\n    loose: true\n  };\n  const entries = allEntries.filter(([ver, mani]) => semver.satisfies(ver, range, {\n    loose: true\n  })).sort((a, b) => {\n    const [vera, mania] = a;\n    const [verb, manib] = b;\n    const notavoida = !shouldAvoid(vera, avoid);\n    const notavoidb = !shouldAvoid(verb, avoid);\n    const notrestra = !restricted[a];\n    const notrestrb = !restricted[b];\n    const notstagea = !staged[a];\n    const notstageb = !staged[b];\n    const notdepra = !mania.deprecated;\n    const notdeprb = !manib.deprecated;\n    const enginea = engineOk(mania, npmVersion, nodeVersion);\n    const engineb = engineOk(manib, npmVersion, nodeVersion);\n    // sort by:\n    // - not an avoided version\n    // - not restricted\n    // - not staged\n    // - not deprecated and engine ok\n    // - engine ok\n    // - not deprecated\n    // - semver\n    return notavoidb - notavoida || notrestrb - notrestra || notstageb - notstagea || (notdeprb && engineb) - (notdepra && enginea) || engineb - enginea || notdeprb - notdepra || semver.rcompare(vera, verb, sortSemverOpt);\n  });\n  return decorateAvoid(entries[0] && entries[0][1], avoid);\n};\nmodule.exports = (packument, wanted, opts = {}) => {\n  const mani = pickManifest(packument, wanted, opts);\n  const picked = mani && normalizeBin(mani);\n  const policyRestrictions = packument.policyRestrictions;\n  const restricted = policyRestrictions && policyRestrictions.versions || {};\n  if (picked && !restricted[picked.version]) {\n    return picked;\n  }\n  const {\n    before = null,\n    defaultTag = 'latest'\n  } = opts;\n  const bstr = before ? new Date(before).toLocaleString() : '';\n  const {\n    name\n  } = packument;\n  const pckg = `${name}@${wanted}` + (before ? ` with a date before ${bstr}` : '');\n  const isForbidden = picked && !!restricted[picked.version];\n  const polMsg = isForbidden ? policyRestrictions.message : '';\n  const msg = !isForbidden ? `No matching version found for ${pckg}.` : `Could not download ${pckg} due to policy violations:\\n${polMsg}`;\n  const code = isForbidden ? 'E403' : 'ETARGET';\n  throw Object.assign(new Error(msg), {\n    code,\n    type: npa.resolve(packument.name, wanted).type,\n    wanted,\n    versions: Object.keys(packument.versions),\n    name,\n    distTags: packument['dist-tags'],\n    defaultTag\n  });\n};","map":{"version":3,"names":["npa","require","semver","checkEngine","normalizeBin","engineOk","manifest","npmVersion","nodeVersion","_","isBefore","verTimes","ver","time","Date","parse","avoidSemverOpt","includePrerelease","loose","shouldAvoid","avoid","satisfies","decorateAvoid","result","version","_shouldAvoid","pickManifest","packument","wanted","opts","defaultTag","before","process","includeStaged","avoidStrict","name","versions","looseOpts","caret","_outsideDependencyRange","_isSemVerMajor","star","Object","assign","Error","code","keys","staged","stagedVersions","restricted","policyRestrictions","Infinity","spec","resolve","type","distTags","clean","mani","range","defaultVer","allEntries","entries","concat","filter","length","sortSemverOpt","sort","a","b","vera","mania","verb","manib","notavoida","notavoidb","notrestra","notrestrb","notstagea","notstageb","notdepra","deprecated","notdeprb","enginea","engineb","rcompare","module","exports","picked","bstr","toLocaleString","pckg","isForbidden","polMsg","message","msg"],"sources":["I:/Angular/angular-blog/node_modules/npm-pick-manifest/lib/index.js"],"sourcesContent":["'use strict'\n\nconst npa = require('npm-package-arg')\nconst semver = require('semver')\nconst { checkEngine } = require('npm-install-checks')\nconst normalizeBin = require('npm-normalize-package-bin')\n\nconst engineOk = (manifest, npmVersion, nodeVersion) => {\n  try {\n    checkEngine(manifest, npmVersion, nodeVersion)\n    return true\n  } catch (_) {\n    return false\n  }\n}\n\nconst isBefore = (verTimes, ver, time) =>\n  !verTimes || !verTimes[ver] || Date.parse(verTimes[ver]) <= time\n\nconst avoidSemverOpt = { includePrerelease: true, loose: true }\nconst shouldAvoid = (ver, avoid) =>\n  avoid && semver.satisfies(ver, avoid, avoidSemverOpt)\n\nconst decorateAvoid = (result, avoid) =>\n  result && shouldAvoid(result.version, avoid)\n    ? { ...result, _shouldAvoid: true }\n    : result\n\nconst pickManifest = (packument, wanted, opts) => {\n  const {\n    defaultTag = 'latest',\n    before = null,\n    nodeVersion = process.version,\n    npmVersion = null,\n    includeStaged = false,\n    avoid = null,\n    avoidStrict = false,\n  } = opts\n\n  const { name, time: verTimes } = packument\n  const versions = packument.versions || {}\n\n  if (avoidStrict) {\n    const looseOpts = {\n      ...opts,\n      avoidStrict: false,\n    }\n\n    const result = pickManifest(packument, wanted, looseOpts)\n    if (!result || !result._shouldAvoid) {\n      return result\n    }\n\n    const caret = pickManifest(packument, `^${result.version}`, looseOpts)\n    if (!caret || !caret._shouldAvoid) {\n      return {\n        ...caret,\n        _outsideDependencyRange: true,\n        _isSemVerMajor: false,\n      }\n    }\n\n    const star = pickManifest(packument, '*', looseOpts)\n    if (!star || !star._shouldAvoid) {\n      return {\n        ...star,\n        _outsideDependencyRange: true,\n        _isSemVerMajor: true,\n      }\n    }\n\n    throw Object.assign(new Error(`No avoidable versions for ${name}`), {\n      code: 'ETARGET',\n      name,\n      wanted,\n      avoid,\n      before,\n      versions: Object.keys(versions),\n    })\n  }\n\n  const staged = (includeStaged && packument.stagedVersions &&\n    packument.stagedVersions.versions) || {}\n  const restricted = (packument.policyRestrictions &&\n    packument.policyRestrictions.versions) || {}\n\n  const time = before && verTimes ? +(new Date(before)) : Infinity\n  const spec = npa.resolve(name, wanted || defaultTag)\n  const type = spec.type\n  const distTags = packument['dist-tags'] || {}\n\n  if (type !== 'tag' && type !== 'version' && type !== 'range') {\n    throw new Error('Only tag, version, and range are supported')\n  }\n\n  // if the type is 'tag', and not just the implicit default, then it must\n  // be that exactly, or nothing else will do.\n  if (wanted && type === 'tag') {\n    const ver = distTags[wanted]\n    // if the version in the dist-tags is before the before date, then\n    // we use that.  Otherwise, we get the highest precedence version\n    // prior to the dist-tag.\n    if (isBefore(verTimes, ver, time)) {\n      return decorateAvoid(versions[ver] || staged[ver] || restricted[ver], avoid)\n    } else {\n      return pickManifest(packument, `<=${ver}`, opts)\n    }\n  }\n\n  // similarly, if a specific version, then only that version will do\n  if (wanted && type === 'version') {\n    const ver = semver.clean(wanted, { loose: true })\n    const mani = versions[ver] || staged[ver] || restricted[ver]\n    return isBefore(verTimes, ver, time) ? decorateAvoid(mani, avoid) : null\n  }\n\n  // ok, sort based on our heuristics, and pick the best fit\n  const range = type === 'range' ? wanted : '*'\n\n  // if the range is *, then we prefer the 'latest' if available\n  // but skip this if it should be avoided, in that case we have\n  // to try a little harder.\n  const defaultVer = distTags[defaultTag]\n  if (defaultVer &&\n      (range === '*' || semver.satisfies(defaultVer, range, { loose: true })) &&\n      !shouldAvoid(defaultVer, avoid)) {\n    const mani = versions[defaultVer]\n    if (mani && isBefore(verTimes, defaultVer, time)) {\n      return mani\n    }\n  }\n\n  // ok, actually have to sort the list and take the winner\n  const allEntries = Object.entries(versions)\n    .concat(Object.entries(staged))\n    .concat(Object.entries(restricted))\n    .filter(([ver, mani]) => isBefore(verTimes, ver, time))\n\n  if (!allEntries.length) {\n    throw Object.assign(new Error(`No versions available for ${name}`), {\n      code: 'ENOVERSIONS',\n      name,\n      type,\n      wanted,\n      before,\n      versions: Object.keys(versions),\n    })\n  }\n\n  const sortSemverOpt = { loose: true }\n  const entries = allEntries.filter(([ver, mani]) =>\n    semver.satisfies(ver, range, { loose: true }))\n    .sort((a, b) => {\n      const [vera, mania] = a\n      const [verb, manib] = b\n      const notavoida = !shouldAvoid(vera, avoid)\n      const notavoidb = !shouldAvoid(verb, avoid)\n      const notrestra = !restricted[a]\n      const notrestrb = !restricted[b]\n      const notstagea = !staged[a]\n      const notstageb = !staged[b]\n      const notdepra = !mania.deprecated\n      const notdeprb = !manib.deprecated\n      const enginea = engineOk(mania, npmVersion, nodeVersion)\n      const engineb = engineOk(manib, npmVersion, nodeVersion)\n      // sort by:\n      // - not an avoided version\n      // - not restricted\n      // - not staged\n      // - not deprecated and engine ok\n      // - engine ok\n      // - not deprecated\n      // - semver\n      return (notavoidb - notavoida) ||\n        (notrestrb - notrestra) ||\n        (notstageb - notstagea) ||\n        ((notdeprb && engineb) - (notdepra && enginea)) ||\n        (engineb - enginea) ||\n        (notdeprb - notdepra) ||\n        semver.rcompare(vera, verb, sortSemverOpt)\n    })\n\n  return decorateAvoid(entries[0] && entries[0][1], avoid)\n}\n\nmodule.exports = (packument, wanted, opts = {}) => {\n  const mani = pickManifest(packument, wanted, opts)\n  const picked = mani && normalizeBin(mani)\n  const policyRestrictions = packument.policyRestrictions\n  const restricted = (policyRestrictions && policyRestrictions.versions) || {}\n\n  if (picked && !restricted[picked.version]) {\n    return picked\n  }\n\n  const { before = null, defaultTag = 'latest' } = opts\n  const bstr = before ? new Date(before).toLocaleString() : ''\n  const { name } = packument\n  const pckg = `${name}@${wanted}` +\n    (before ? ` with a date before ${bstr}` : '')\n\n  const isForbidden = picked && !!restricted[picked.version]\n  const polMsg = isForbidden ? policyRestrictions.message : ''\n\n  const msg = !isForbidden ? `No matching version found for ${pckg}.`\n    : `Could not download ${pckg} due to policy violations:\\n${polMsg}`\n\n  const code = isForbidden ? 'E403' : 'ETARGET'\n  throw Object.assign(new Error(msg), {\n    code,\n    type: npa.resolve(packument.name, wanted).type,\n    wanted,\n    versions: Object.keys(packument.versions),\n    name,\n    distTags: packument['dist-tags'],\n    defaultTag,\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}