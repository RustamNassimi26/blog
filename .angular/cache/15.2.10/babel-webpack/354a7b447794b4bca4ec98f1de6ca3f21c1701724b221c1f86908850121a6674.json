{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"I:/Angular/angular-blog/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Glob = void 0;\nconst minimatch_1 = require(\"minimatch\");\nconst path_scurry_1 = require(\"path-scurry\");\nconst url_1 = require(\"url\");\nconst pattern_js_1 = require(\"./pattern.js\");\nconst walker_js_1 = require(\"./walker.js\");\n// if no process global, just call it linux.\n// so we default to case-sensitive, / separators\nconst defaultPlatform = typeof process === 'object' && process && typeof process.platform === 'string' ? process.platform : 'linux';\n/**\n * An object that can perform glob pattern traversals.\n */\nclass Glob {\n  absolute;\n  cwd;\n  root;\n  dot;\n  dotRelative;\n  follow;\n  ignore;\n  magicalBraces;\n  mark;\n  matchBase;\n  maxDepth;\n  nobrace;\n  nocase;\n  nodir;\n  noext;\n  noglobstar;\n  pattern;\n  platform;\n  realpath;\n  scurry;\n  stat;\n  signal;\n  windowsPathsNoEscape;\n  withFileTypes;\n  /**\n   * The options provided to the constructor.\n   */\n  opts;\n  /**\n   * An array of parsed immutable {@link Pattern} objects.\n   */\n  patterns;\n  /**\n   * All options are stored as properties on the `Glob` object.\n   *\n   * See {@link GlobOptions} for full options descriptions.\n   *\n   * Note that a previous `Glob` object can be passed as the\n   * `GlobOptions` to another `Glob` instantiation to re-use settings\n   * and caches with a new pattern.\n   *\n   * Traversal functions can be called multiple times to run the walk\n   * again.\n   */\n  constructor(pattern, opts) {\n    /* c8 ignore start */\n    if (!opts) throw new TypeError('glob options required');\n    /* c8 ignore stop */\n    this.withFileTypes = !!opts.withFileTypes;\n    this.signal = opts.signal;\n    this.follow = !!opts.follow;\n    this.dot = !!opts.dot;\n    this.dotRelative = !!opts.dotRelative;\n    this.nodir = !!opts.nodir;\n    this.mark = !!opts.mark;\n    if (!opts.cwd) {\n      this.cwd = '';\n    } else if (opts.cwd instanceof URL || opts.cwd.startsWith('file://')) {\n      opts.cwd = (0, url_1.fileURLToPath)(opts.cwd);\n    }\n    this.cwd = opts.cwd || '';\n    this.root = opts.root;\n    this.magicalBraces = !!opts.magicalBraces;\n    this.nobrace = !!opts.nobrace;\n    this.noext = !!opts.noext;\n    this.realpath = !!opts.realpath;\n    this.absolute = opts.absolute;\n    this.noglobstar = !!opts.noglobstar;\n    this.matchBase = !!opts.matchBase;\n    this.maxDepth = typeof opts.maxDepth === 'number' ? opts.maxDepth : Infinity;\n    this.stat = !!opts.stat;\n    this.ignore = opts.ignore;\n    if (this.withFileTypes && this.absolute !== undefined) {\n      throw new Error('cannot set absolute and withFileTypes:true');\n    }\n    if (typeof pattern === 'string') {\n      pattern = [pattern];\n    }\n    this.windowsPathsNoEscape = !!opts.windowsPathsNoEscape || opts.allowWindowsEscape === false;\n    if (this.windowsPathsNoEscape) {\n      pattern = pattern.map(p => p.replace(/\\\\/g, '/'));\n    }\n    if (this.matchBase) {\n      if (opts.noglobstar) {\n        throw new TypeError('base matching requires globstar');\n      }\n      pattern = pattern.map(p => p.includes('/') ? p : `./**/${p}`);\n    }\n    this.pattern = pattern;\n    this.platform = opts.platform || defaultPlatform;\n    this.opts = {\n      ...opts,\n      platform: this.platform\n    };\n    if (opts.scurry) {\n      this.scurry = opts.scurry;\n      if (opts.nocase !== undefined && opts.nocase !== opts.scurry.nocase) {\n        throw new Error('nocase option contradicts provided scurry option');\n      }\n    } else {\n      const Scurry = opts.platform === 'win32' ? path_scurry_1.PathScurryWin32 : opts.platform === 'darwin' ? path_scurry_1.PathScurryDarwin : opts.platform ? path_scurry_1.PathScurryPosix : path_scurry_1.PathScurry;\n      this.scurry = new Scurry(this.cwd, {\n        nocase: opts.nocase,\n        fs: opts.fs\n      });\n    }\n    this.nocase = this.scurry.nocase;\n    // If you do nocase:true on a case-sensitive file system, then\n    // we need to use regexps instead of strings for non-magic\n    // path portions, because statting `aBc` won't return results\n    // for the file `AbC` for example.\n    const nocaseMagicOnly = this.platform === 'darwin' || this.platform === 'win32';\n    const mmo = {\n      // default nocase based on platform\n      ...opts,\n      dot: this.dot,\n      matchBase: this.matchBase,\n      nobrace: this.nobrace,\n      nocase: this.nocase,\n      nocaseMagicOnly,\n      nocomment: true,\n      noext: this.noext,\n      nonegate: true,\n      optimizationLevel: 2,\n      platform: this.platform,\n      windowsPathsNoEscape: this.windowsPathsNoEscape,\n      debug: !!this.opts.debug\n    };\n    const mms = this.pattern.map(p => new minimatch_1.Minimatch(p, mmo));\n    const [matchSet, globParts] = mms.reduce((set, m) => {\n      set[0].push(...m.set);\n      set[1].push(...m.globParts);\n      return set;\n    }, [[], []]);\n    this.patterns = matchSet.map((set, i) => {\n      const g = globParts[i];\n      /* c8 ignore start */\n      if (!g) throw new Error('invalid pattern object');\n      /* c8 ignore stop */\n      return new pattern_js_1.Pattern(set, g, 0, this.platform);\n    });\n  }\n  walk() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // Walkers always return array of Path objects, so we just have to\n      // coerce them into the right shape.  It will have already called\n      // realpath() if the option was set to do so, so we know that's cached.\n      // start out knowing the cwd, at least\n      return [...(yield new walker_js_1.GlobWalker(_this.patterns, _this.scurry.cwd, {\n        ..._this.opts,\n        maxDepth: _this.maxDepth !== Infinity ? _this.maxDepth + _this.scurry.cwd.depth() : Infinity,\n        platform: _this.platform,\n        nocase: _this.nocase\n      }).walk())];\n    })();\n  }\n  walkSync() {\n    return [...new walker_js_1.GlobWalker(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth: this.maxDepth !== Infinity ? this.maxDepth + this.scurry.cwd.depth() : Infinity,\n      platform: this.platform,\n      nocase: this.nocase\n    }).walkSync()];\n  }\n  stream() {\n    return new walker_js_1.GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth: this.maxDepth !== Infinity ? this.maxDepth + this.scurry.cwd.depth() : Infinity,\n      platform: this.platform,\n      nocase: this.nocase\n    }).stream();\n  }\n  streamSync() {\n    return new walker_js_1.GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth: this.maxDepth !== Infinity ? this.maxDepth + this.scurry.cwd.depth() : Infinity,\n      platform: this.platform,\n      nocase: this.nocase\n    }).streamSync();\n  }\n  /**\n   * Default sync iteration function. Returns a Generator that\n   * iterates over the results.\n   */\n  iterateSync() {\n    return this.streamSync()[Symbol.iterator]();\n  }\n  [Symbol.iterator]() {\n    return this.iterateSync();\n  }\n  /**\n   * Default async iteration function. Returns an AsyncGenerator that\n   * iterates over the results.\n   */\n  iterate() {\n    return this.stream()[Symbol.asyncIterator]();\n  }\n  [Symbol.asyncIterator]() {\n    return this.iterate();\n  }\n}\nexports.Glob = Glob;","map":{"version":3,"names":["Object","defineProperty","exports","value","Glob","minimatch_1","require","path_scurry_1","url_1","pattern_js_1","walker_js_1","defaultPlatform","process","platform","absolute","cwd","root","dot","dotRelative","follow","ignore","magicalBraces","mark","matchBase","maxDepth","nobrace","nocase","nodir","noext","noglobstar","pattern","realpath","scurry","stat","signal","windowsPathsNoEscape","withFileTypes","opts","patterns","constructor","TypeError","URL","startsWith","fileURLToPath","Infinity","undefined","Error","allowWindowsEscape","map","p","replace","includes","Scurry","PathScurryWin32","PathScurryDarwin","PathScurryPosix","PathScurry","fs","nocaseMagicOnly","mmo","nocomment","nonegate","optimizationLevel","debug","mms","Minimatch","matchSet","globParts","reduce","set","m","push","i","g","Pattern","walk","GlobWalker","depth","walkSync","stream","GlobStream","streamSync","iterateSync","Symbol","iterator","iterate","asyncIterator"],"sources":["I:/Angular/angular-blog/node_modules/read-package-json/node_modules/glob/dist/commonjs/glob.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Glob = void 0;\nconst minimatch_1 = require(\"minimatch\");\nconst path_scurry_1 = require(\"path-scurry\");\nconst url_1 = require(\"url\");\nconst pattern_js_1 = require(\"./pattern.js\");\nconst walker_js_1 = require(\"./walker.js\");\n// if no process global, just call it linux.\n// so we default to case-sensitive, / separators\nconst defaultPlatform = typeof process === 'object' &&\n    process &&\n    typeof process.platform === 'string'\n    ? process.platform\n    : 'linux';\n/**\n * An object that can perform glob pattern traversals.\n */\nclass Glob {\n    absolute;\n    cwd;\n    root;\n    dot;\n    dotRelative;\n    follow;\n    ignore;\n    magicalBraces;\n    mark;\n    matchBase;\n    maxDepth;\n    nobrace;\n    nocase;\n    nodir;\n    noext;\n    noglobstar;\n    pattern;\n    platform;\n    realpath;\n    scurry;\n    stat;\n    signal;\n    windowsPathsNoEscape;\n    withFileTypes;\n    /**\n     * The options provided to the constructor.\n     */\n    opts;\n    /**\n     * An array of parsed immutable {@link Pattern} objects.\n     */\n    patterns;\n    /**\n     * All options are stored as properties on the `Glob` object.\n     *\n     * See {@link GlobOptions} for full options descriptions.\n     *\n     * Note that a previous `Glob` object can be passed as the\n     * `GlobOptions` to another `Glob` instantiation to re-use settings\n     * and caches with a new pattern.\n     *\n     * Traversal functions can be called multiple times to run the walk\n     * again.\n     */\n    constructor(pattern, opts) {\n        /* c8 ignore start */\n        if (!opts)\n            throw new TypeError('glob options required');\n        /* c8 ignore stop */\n        this.withFileTypes = !!opts.withFileTypes;\n        this.signal = opts.signal;\n        this.follow = !!opts.follow;\n        this.dot = !!opts.dot;\n        this.dotRelative = !!opts.dotRelative;\n        this.nodir = !!opts.nodir;\n        this.mark = !!opts.mark;\n        if (!opts.cwd) {\n            this.cwd = '';\n        }\n        else if (opts.cwd instanceof URL || opts.cwd.startsWith('file://')) {\n            opts.cwd = (0, url_1.fileURLToPath)(opts.cwd);\n        }\n        this.cwd = opts.cwd || '';\n        this.root = opts.root;\n        this.magicalBraces = !!opts.magicalBraces;\n        this.nobrace = !!opts.nobrace;\n        this.noext = !!opts.noext;\n        this.realpath = !!opts.realpath;\n        this.absolute = opts.absolute;\n        this.noglobstar = !!opts.noglobstar;\n        this.matchBase = !!opts.matchBase;\n        this.maxDepth =\n            typeof opts.maxDepth === 'number' ? opts.maxDepth : Infinity;\n        this.stat = !!opts.stat;\n        this.ignore = opts.ignore;\n        if (this.withFileTypes && this.absolute !== undefined) {\n            throw new Error('cannot set absolute and withFileTypes:true');\n        }\n        if (typeof pattern === 'string') {\n            pattern = [pattern];\n        }\n        this.windowsPathsNoEscape =\n            !!opts.windowsPathsNoEscape ||\n                opts.allowWindowsEscape === false;\n        if (this.windowsPathsNoEscape) {\n            pattern = pattern.map(p => p.replace(/\\\\/g, '/'));\n        }\n        if (this.matchBase) {\n            if (opts.noglobstar) {\n                throw new TypeError('base matching requires globstar');\n            }\n            pattern = pattern.map(p => (p.includes('/') ? p : `./**/${p}`));\n        }\n        this.pattern = pattern;\n        this.platform = opts.platform || defaultPlatform;\n        this.opts = { ...opts, platform: this.platform };\n        if (opts.scurry) {\n            this.scurry = opts.scurry;\n            if (opts.nocase !== undefined &&\n                opts.nocase !== opts.scurry.nocase) {\n                throw new Error('nocase option contradicts provided scurry option');\n            }\n        }\n        else {\n            const Scurry = opts.platform === 'win32'\n                ? path_scurry_1.PathScurryWin32\n                : opts.platform === 'darwin'\n                    ? path_scurry_1.PathScurryDarwin\n                    : opts.platform\n                        ? path_scurry_1.PathScurryPosix\n                        : path_scurry_1.PathScurry;\n            this.scurry = new Scurry(this.cwd, {\n                nocase: opts.nocase,\n                fs: opts.fs,\n            });\n        }\n        this.nocase = this.scurry.nocase;\n        // If you do nocase:true on a case-sensitive file system, then\n        // we need to use regexps instead of strings for non-magic\n        // path portions, because statting `aBc` won't return results\n        // for the file `AbC` for example.\n        const nocaseMagicOnly = this.platform === 'darwin' || this.platform === 'win32';\n        const mmo = {\n            // default nocase based on platform\n            ...opts,\n            dot: this.dot,\n            matchBase: this.matchBase,\n            nobrace: this.nobrace,\n            nocase: this.nocase,\n            nocaseMagicOnly,\n            nocomment: true,\n            noext: this.noext,\n            nonegate: true,\n            optimizationLevel: 2,\n            platform: this.platform,\n            windowsPathsNoEscape: this.windowsPathsNoEscape,\n            debug: !!this.opts.debug,\n        };\n        const mms = this.pattern.map(p => new minimatch_1.Minimatch(p, mmo));\n        const [matchSet, globParts] = mms.reduce((set, m) => {\n            set[0].push(...m.set);\n            set[1].push(...m.globParts);\n            return set;\n        }, [[], []]);\n        this.patterns = matchSet.map((set, i) => {\n            const g = globParts[i];\n            /* c8 ignore start */\n            if (!g)\n                throw new Error('invalid pattern object');\n            /* c8 ignore stop */\n            return new pattern_js_1.Pattern(set, g, 0, this.platform);\n        });\n    }\n    async walk() {\n        // Walkers always return array of Path objects, so we just have to\n        // coerce them into the right shape.  It will have already called\n        // realpath() if the option was set to do so, so we know that's cached.\n        // start out knowing the cwd, at least\n        return [\n            ...(await new walker_js_1.GlobWalker(this.patterns, this.scurry.cwd, {\n                ...this.opts,\n                maxDepth: this.maxDepth !== Infinity\n                    ? this.maxDepth + this.scurry.cwd.depth()\n                    : Infinity,\n                platform: this.platform,\n                nocase: this.nocase,\n            }).walk()),\n        ];\n    }\n    walkSync() {\n        return [\n            ...new walker_js_1.GlobWalker(this.patterns, this.scurry.cwd, {\n                ...this.opts,\n                maxDepth: this.maxDepth !== Infinity\n                    ? this.maxDepth + this.scurry.cwd.depth()\n                    : Infinity,\n                platform: this.platform,\n                nocase: this.nocase,\n            }).walkSync(),\n        ];\n    }\n    stream() {\n        return new walker_js_1.GlobStream(this.patterns, this.scurry.cwd, {\n            ...this.opts,\n            maxDepth: this.maxDepth !== Infinity\n                ? this.maxDepth + this.scurry.cwd.depth()\n                : Infinity,\n            platform: this.platform,\n            nocase: this.nocase,\n        }).stream();\n    }\n    streamSync() {\n        return new walker_js_1.GlobStream(this.patterns, this.scurry.cwd, {\n            ...this.opts,\n            maxDepth: this.maxDepth !== Infinity\n                ? this.maxDepth + this.scurry.cwd.depth()\n                : Infinity,\n            platform: this.platform,\n            nocase: this.nocase,\n        }).streamSync();\n    }\n    /**\n     * Default sync iteration function. Returns a Generator that\n     * iterates over the results.\n     */\n    iterateSync() {\n        return this.streamSync()[Symbol.iterator]();\n    }\n    [Symbol.iterator]() {\n        return this.iterateSync();\n    }\n    /**\n     * Default async iteration function. Returns an AsyncGenerator that\n     * iterates over the results.\n     */\n    iterate() {\n        return this.stream()[Symbol.asyncIterator]();\n    }\n    [Symbol.asyncIterator]() {\n        return this.iterate();\n    }\n}\nexports.Glob = Glob;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}