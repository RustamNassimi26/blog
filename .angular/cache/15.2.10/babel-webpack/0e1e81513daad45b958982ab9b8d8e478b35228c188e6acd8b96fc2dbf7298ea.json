{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _asyncToGenerator = require(\"I:/Angular/angular-blog/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CompletionCommandModule = void 0;\nconst path_1 = require(\"path\");\nconst yargs_1 = __importDefault(require(\"yargs\"));\nconst command_module_1 = require(\"../../command-builder/command-module\");\nconst command_1 = require(\"../../command-builder/utilities/command\");\nconst color_1 = require(\"../../utilities/color\");\nconst completion_1 = require(\"../../utilities/completion\");\nconst error_1 = require(\"../../utilities/error\");\nclass CompletionCommandModule extends command_module_1.CommandModule {\n  constructor() {\n    super(...arguments);\n    this.command = 'completion';\n    this.describe = 'Set up Angular CLI autocompletion for your terminal.';\n    this.longDescriptionPath = (0, path_1.join)(__dirname, 'long-description.md');\n  }\n  builder(localYargs) {\n    return (0, command_1.addCommandModuleToYargs)(localYargs, CompletionScriptCommandModule, this.context);\n  }\n  run() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let rcFile;\n      try {\n        rcFile = yield (0, completion_1.initializeAutocomplete)();\n      } catch (err) {\n        (0, error_1.assertIsError)(err);\n        _this.context.logger.error(err.message);\n        return 1;\n      }\n      _this.context.logger.info(`\nAppended \\`source <(ng completion script)\\` to \\`${rcFile}\\`. Restart your terminal or run the following to autocomplete \\`ng\\` commands:\n\n    ${color_1.colors.yellow('source <(ng completion script)')}\n      `.trim());\n      if ((yield (0, completion_1.hasGlobalCliInstall)()) === false) {\n        _this.context.logger.warn('Setup completed successfully, but there does not seem to be a global install of the' + ' Angular CLI. For autocompletion to work, the CLI will need to be on your `$PATH`, which' + ' is typically done with the `-g` flag in `npm install -g @angular/cli`.' + '\\n\\n' + 'For more information, see https://angular.io/cli/completion#global-install');\n      }\n      return 0;\n    })();\n  }\n}\nexports.CompletionCommandModule = CompletionCommandModule;\nclass CompletionScriptCommandModule extends command_module_1.CommandModule {\n  constructor() {\n    super(...arguments);\n    this.command = 'script';\n    this.describe = 'Generate a bash and zsh real-time type-ahead autocompletion script.';\n    this.longDescriptionPath = undefined;\n  }\n  builder(localYargs) {\n    return localYargs;\n  }\n  run() {\n    yargs_1.default.showCompletionScript();\n  }\n}","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","CompletionCommandModule","path_1","require","yargs_1","command_module_1","command_1","color_1","completion_1","error_1","CommandModule","constructor","arguments","command","describe","longDescriptionPath","join","__dirname","builder","localYargs","addCommandModuleToYargs","CompletionScriptCommandModule","context","run","rcFile","initializeAutocomplete","err","assertIsError","logger","error","message","info","colors","yellow","trim","hasGlobalCliInstall","warn","undefined","default","showCompletionScript"],"sources":["I:/Angular/angular-blog/node_modules/@angular/cli/src/commands/completion/cli.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompletionCommandModule = void 0;\nconst path_1 = require(\"path\");\nconst yargs_1 = __importDefault(require(\"yargs\"));\nconst command_module_1 = require(\"../../command-builder/command-module\");\nconst command_1 = require(\"../../command-builder/utilities/command\");\nconst color_1 = require(\"../../utilities/color\");\nconst completion_1 = require(\"../../utilities/completion\");\nconst error_1 = require(\"../../utilities/error\");\nclass CompletionCommandModule extends command_module_1.CommandModule {\n    constructor() {\n        super(...arguments);\n        this.command = 'completion';\n        this.describe = 'Set up Angular CLI autocompletion for your terminal.';\n        this.longDescriptionPath = (0, path_1.join)(__dirname, 'long-description.md');\n    }\n    builder(localYargs) {\n        return (0, command_1.addCommandModuleToYargs)(localYargs, CompletionScriptCommandModule, this.context);\n    }\n    async run() {\n        let rcFile;\n        try {\n            rcFile = await (0, completion_1.initializeAutocomplete)();\n        }\n        catch (err) {\n            (0, error_1.assertIsError)(err);\n            this.context.logger.error(err.message);\n            return 1;\n        }\n        this.context.logger.info(`\nAppended \\`source <(ng completion script)\\` to \\`${rcFile}\\`. Restart your terminal or run the following to autocomplete \\`ng\\` commands:\n\n    ${color_1.colors.yellow('source <(ng completion script)')}\n      `.trim());\n        if ((await (0, completion_1.hasGlobalCliInstall)()) === false) {\n            this.context.logger.warn('Setup completed successfully, but there does not seem to be a global install of the' +\n                ' Angular CLI. For autocompletion to work, the CLI will need to be on your `$PATH`, which' +\n                ' is typically done with the `-g` flag in `npm install -g @angular/cli`.' +\n                '\\n\\n' +\n                'For more information, see https://angular.io/cli/completion#global-install');\n        }\n        return 0;\n    }\n}\nexports.CompletionCommandModule = CompletionCommandModule;\nclass CompletionScriptCommandModule extends command_module_1.CommandModule {\n    constructor() {\n        super(...arguments);\n        this.command = 'script';\n        this.describe = 'Generate a bash and zsh real-time type-ahead autocompletion script.';\n        this.longDescriptionPath = undefined;\n    }\n    builder(localYargs) {\n        return localYargs;\n    }\n    run() {\n        yargs_1.default.showCompletionScript();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}