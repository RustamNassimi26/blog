{"ast":null,"code":"'use strict';\n\nconst {\n  Minipass\n} = require('minipass');\nconst EE = require('events').EventEmitter;\nconst fs = require('fs');\nconst writev = fs.writev;\nconst _autoClose = Symbol('_autoClose');\nconst _close = Symbol('_close');\nconst _ended = Symbol('_ended');\nconst _fd = Symbol('_fd');\nconst _finished = Symbol('_finished');\nconst _flags = Symbol('_flags');\nconst _flush = Symbol('_flush');\nconst _handleChunk = Symbol('_handleChunk');\nconst _makeBuf = Symbol('_makeBuf');\nconst _mode = Symbol('_mode');\nconst _needDrain = Symbol('_needDrain');\nconst _onerror = Symbol('_onerror');\nconst _onopen = Symbol('_onopen');\nconst _onread = Symbol('_onread');\nconst _onwrite = Symbol('_onwrite');\nconst _open = Symbol('_open');\nconst _path = Symbol('_path');\nconst _pos = Symbol('_pos');\nconst _queue = Symbol('_queue');\nconst _read = Symbol('_read');\nconst _readSize = Symbol('_readSize');\nconst _reading = Symbol('_reading');\nconst _remain = Symbol('_remain');\nconst _size = Symbol('_size');\nconst _write = Symbol('_write');\nconst _writing = Symbol('_writing');\nconst _defaultFlag = Symbol('_defaultFlag');\nconst _errored = Symbol('_errored');\nclass ReadStream extends Minipass {\n  constructor(path, opt) {\n    opt = opt || {};\n    super(opt);\n    this.readable = true;\n    this.writable = false;\n    if (typeof path !== 'string') {\n      throw new TypeError('path must be a string');\n    }\n    this[_errored] = false;\n    this[_fd] = typeof opt.fd === 'number' ? opt.fd : null;\n    this[_path] = path;\n    this[_readSize] = opt.readSize || 16 * 1024 * 1024;\n    this[_reading] = false;\n    this[_size] = typeof opt.size === 'number' ? opt.size : Infinity;\n    this[_remain] = this[_size];\n    this[_autoClose] = typeof opt.autoClose === 'boolean' ? opt.autoClose : true;\n    if (typeof this[_fd] === 'number') {\n      this[_read]();\n    } else {\n      this[_open]();\n    }\n  }\n  get fd() {\n    return this[_fd];\n  }\n  get path() {\n    return this[_path];\n  }\n  write() {\n    throw new TypeError('this is a readable stream');\n  }\n  end() {\n    throw new TypeError('this is a readable stream');\n  }\n  [_open]() {\n    fs.open(this[_path], 'r', (er, fd) => this[_onopen](er, fd));\n  }\n  [_onopen](er, fd) {\n    if (er) {\n      this[_onerror](er);\n    } else {\n      this[_fd] = fd;\n      this.emit('open', fd);\n      this[_read]();\n    }\n  }\n  [_makeBuf]() {\n    return Buffer.allocUnsafe(Math.min(this[_readSize], this[_remain]));\n  }\n  [_read]() {\n    if (!this[_reading]) {\n      this[_reading] = true;\n      const buf = this[_makeBuf]();\n      /* istanbul ignore if */\n      if (buf.length === 0) {\n        return process.nextTick(() => this[_onread](null, 0, buf));\n      }\n      fs.read(this[_fd], buf, 0, buf.length, null, (er, br, b) => this[_onread](er, br, b));\n    }\n  }\n  [_onread](er, br, buf) {\n    this[_reading] = false;\n    if (er) {\n      this[_onerror](er);\n    } else if (this[_handleChunk](br, buf)) {\n      this[_read]();\n    }\n  }\n  [_close]() {\n    if (this[_autoClose] && typeof this[_fd] === 'number') {\n      const fd = this[_fd];\n      this[_fd] = null;\n      fs.close(fd, er => er ? this.emit('error', er) : this.emit('close'));\n    }\n  }\n  [_onerror](er) {\n    this[_reading] = true;\n    this[_close]();\n    this.emit('error', er);\n  }\n  [_handleChunk](br, buf) {\n    let ret = false;\n    // no effect if infinite\n    this[_remain] -= br;\n    if (br > 0) {\n      ret = super.write(br < buf.length ? buf.slice(0, br) : buf);\n    }\n    if (br === 0 || this[_remain] <= 0) {\n      ret = false;\n      this[_close]();\n      super.end();\n    }\n    return ret;\n  }\n  emit(ev, data) {\n    switch (ev) {\n      case 'prefinish':\n      case 'finish':\n        break;\n      case 'drain':\n        if (typeof this[_fd] === 'number') {\n          this[_read]();\n        }\n        break;\n      case 'error':\n        if (this[_errored]) {\n          return;\n        }\n        this[_errored] = true;\n        return super.emit(ev, data);\n      default:\n        return super.emit(ev, data);\n    }\n  }\n}\nclass ReadStreamSync extends ReadStream {\n  [_open]() {\n    let threw = true;\n    try {\n      this[_onopen](null, fs.openSync(this[_path], 'r'));\n      threw = false;\n    } finally {\n      if (threw) {\n        this[_close]();\n      }\n    }\n  }\n  [_read]() {\n    let threw = true;\n    try {\n      if (!this[_reading]) {\n        this[_reading] = true;\n        do {\n          const buf = this[_makeBuf]();\n          /* istanbul ignore next */\n          const br = buf.length === 0 ? 0 : fs.readSync(this[_fd], buf, 0, buf.length, null);\n          if (!this[_handleChunk](br, buf)) {\n            break;\n          }\n        } while (true);\n        this[_reading] = false;\n      }\n      threw = false;\n    } finally {\n      if (threw) {\n        this[_close]();\n      }\n    }\n  }\n  [_close]() {\n    if (this[_autoClose] && typeof this[_fd] === 'number') {\n      const fd = this[_fd];\n      this[_fd] = null;\n      fs.closeSync(fd);\n      this.emit('close');\n    }\n  }\n}\nclass WriteStream extends EE {\n  constructor(path, opt) {\n    opt = opt || {};\n    super(opt);\n    this.readable = false;\n    this.writable = true;\n    this[_errored] = false;\n    this[_writing] = false;\n    this[_ended] = false;\n    this[_needDrain] = false;\n    this[_queue] = [];\n    this[_path] = path;\n    this[_fd] = typeof opt.fd === 'number' ? opt.fd : null;\n    this[_mode] = opt.mode === undefined ? 0o666 : opt.mode;\n    this[_pos] = typeof opt.start === 'number' ? opt.start : null;\n    this[_autoClose] = typeof opt.autoClose === 'boolean' ? opt.autoClose : true;\n\n    // truncating makes no sense when writing into the middle\n    const defaultFlag = this[_pos] !== null ? 'r+' : 'w';\n    this[_defaultFlag] = opt.flags === undefined;\n    this[_flags] = this[_defaultFlag] ? defaultFlag : opt.flags;\n    if (this[_fd] === null) {\n      this[_open]();\n    }\n  }\n  emit(ev, data) {\n    if (ev === 'error') {\n      if (this[_errored]) {\n        return;\n      }\n      this[_errored] = true;\n    }\n    return super.emit(ev, data);\n  }\n  get fd() {\n    return this[_fd];\n  }\n  get path() {\n    return this[_path];\n  }\n  [_onerror](er) {\n    this[_close]();\n    this[_writing] = true;\n    this.emit('error', er);\n  }\n  [_open]() {\n    fs.open(this[_path], this[_flags], this[_mode], (er, fd) => this[_onopen](er, fd));\n  }\n  [_onopen](er, fd) {\n    if (this[_defaultFlag] && this[_flags] === 'r+' && er && er.code === 'ENOENT') {\n      this[_flags] = 'w';\n      this[_open]();\n    } else if (er) {\n      this[_onerror](er);\n    } else {\n      this[_fd] = fd;\n      this.emit('open', fd);\n      if (!this[_writing]) {\n        this[_flush]();\n      }\n    }\n  }\n  end(buf, enc) {\n    if (buf) {\n      this.write(buf, enc);\n    }\n    this[_ended] = true;\n\n    // synthetic after-write logic, where drain/finish live\n    if (!this[_writing] && !this[_queue].length && typeof this[_fd] === 'number') {\n      this[_onwrite](null, 0);\n    }\n    return this;\n  }\n  write(buf, enc) {\n    if (typeof buf === 'string') {\n      buf = Buffer.from(buf, enc);\n    }\n    if (this[_ended]) {\n      this.emit('error', new Error('write() after end()'));\n      return false;\n    }\n    if (this[_fd] === null || this[_writing] || this[_queue].length) {\n      this[_queue].push(buf);\n      this[_needDrain] = true;\n      return false;\n    }\n    this[_writing] = true;\n    this[_write](buf);\n    return true;\n  }\n  [_write](buf) {\n    fs.write(this[_fd], buf, 0, buf.length, this[_pos], (er, bw) => this[_onwrite](er, bw));\n  }\n  [_onwrite](er, bw) {\n    if (er) {\n      this[_onerror](er);\n    } else {\n      if (this[_pos] !== null) {\n        this[_pos] += bw;\n      }\n      if (this[_queue].length) {\n        this[_flush]();\n      } else {\n        this[_writing] = false;\n        if (this[_ended] && !this[_finished]) {\n          this[_finished] = true;\n          this[_close]();\n          this.emit('finish');\n        } else if (this[_needDrain]) {\n          this[_needDrain] = false;\n          this.emit('drain');\n        }\n      }\n    }\n  }\n  [_flush]() {\n    if (this[_queue].length === 0) {\n      if (this[_ended]) {\n        this[_onwrite](null, 0);\n      }\n    } else if (this[_queue].length === 1) {\n      this[_write](this[_queue].pop());\n    } else {\n      const iovec = this[_queue];\n      this[_queue] = [];\n      writev(this[_fd], iovec, this[_pos], (er, bw) => this[_onwrite](er, bw));\n    }\n  }\n  [_close]() {\n    if (this[_autoClose] && typeof this[_fd] === 'number') {\n      const fd = this[_fd];\n      this[_fd] = null;\n      fs.close(fd, er => er ? this.emit('error', er) : this.emit('close'));\n    }\n  }\n}\nclass WriteStreamSync extends WriteStream {\n  [_open]() {\n    let fd;\n    // only wrap in a try{} block if we know we'll retry, to avoid\n    // the rethrow obscuring the error's source frame in most cases.\n    if (this[_defaultFlag] && this[_flags] === 'r+') {\n      try {\n        fd = fs.openSync(this[_path], this[_flags], this[_mode]);\n      } catch (er) {\n        if (er.code === 'ENOENT') {\n          this[_flags] = 'w';\n          return this[_open]();\n        } else {\n          throw er;\n        }\n      }\n    } else {\n      fd = fs.openSync(this[_path], this[_flags], this[_mode]);\n    }\n    this[_onopen](null, fd);\n  }\n  [_close]() {\n    if (this[_autoClose] && typeof this[_fd] === 'number') {\n      const fd = this[_fd];\n      this[_fd] = null;\n      fs.closeSync(fd);\n      this.emit('close');\n    }\n  }\n  [_write](buf) {\n    // throw the original, but try to close if it fails\n    let threw = true;\n    try {\n      this[_onwrite](null, fs.writeSync(this[_fd], buf, 0, buf.length, this[_pos]));\n      threw = false;\n    } finally {\n      if (threw) {\n        try {\n          this[_close]();\n        } catch {\n          // ok error\n        }\n      }\n    }\n  }\n}\nexports.ReadStream = ReadStream;\nexports.ReadStreamSync = ReadStreamSync;\nexports.WriteStream = WriteStream;\nexports.WriteStreamSync = WriteStreamSync;","map":{"version":3,"names":["Minipass","require","EE","EventEmitter","fs","writev","_autoClose","Symbol","_close","_ended","_fd","_finished","_flags","_flush","_handleChunk","_makeBuf","_mode","_needDrain","_onerror","_onopen","_onread","_onwrite","_open","_path","_pos","_queue","_read","_readSize","_reading","_remain","_size","_write","_writing","_defaultFlag","_errored","ReadStream","constructor","path","opt","readable","writable","TypeError","fd","readSize","size","Infinity","autoClose","write","end","open","er","emit","Buffer","allocUnsafe","Math","min","buf","length","process","nextTick","read","br","b","close","ret","slice","ev","data","ReadStreamSync","threw","openSync","readSync","closeSync","WriteStream","mode","undefined","start","defaultFlag","flags","code","enc","from","Error","push","bw","pop","iovec","WriteStreamSync","writeSync","exports"],"sources":["I:/Angular/angular-blog/node_modules/fs-minipass/lib/index.js"],"sourcesContent":["'use strict'\nconst { Minipass } = require('minipass')\nconst EE = require('events').EventEmitter\nconst fs = require('fs')\n\nconst writev = fs.writev\n\nconst _autoClose = Symbol('_autoClose')\nconst _close = Symbol('_close')\nconst _ended = Symbol('_ended')\nconst _fd = Symbol('_fd')\nconst _finished = Symbol('_finished')\nconst _flags = Symbol('_flags')\nconst _flush = Symbol('_flush')\nconst _handleChunk = Symbol('_handleChunk')\nconst _makeBuf = Symbol('_makeBuf')\nconst _mode = Symbol('_mode')\nconst _needDrain = Symbol('_needDrain')\nconst _onerror = Symbol('_onerror')\nconst _onopen = Symbol('_onopen')\nconst _onread = Symbol('_onread')\nconst _onwrite = Symbol('_onwrite')\nconst _open = Symbol('_open')\nconst _path = Symbol('_path')\nconst _pos = Symbol('_pos')\nconst _queue = Symbol('_queue')\nconst _read = Symbol('_read')\nconst _readSize = Symbol('_readSize')\nconst _reading = Symbol('_reading')\nconst _remain = Symbol('_remain')\nconst _size = Symbol('_size')\nconst _write = Symbol('_write')\nconst _writing = Symbol('_writing')\nconst _defaultFlag = Symbol('_defaultFlag')\nconst _errored = Symbol('_errored')\n\nclass ReadStream extends Minipass {\n  constructor (path, opt) {\n    opt = opt || {}\n    super(opt)\n\n    this.readable = true\n    this.writable = false\n\n    if (typeof path !== 'string') {\n      throw new TypeError('path must be a string')\n    }\n\n    this[_errored] = false\n    this[_fd] = typeof opt.fd === 'number' ? opt.fd : null\n    this[_path] = path\n    this[_readSize] = opt.readSize || 16 * 1024 * 1024\n    this[_reading] = false\n    this[_size] = typeof opt.size === 'number' ? opt.size : Infinity\n    this[_remain] = this[_size]\n    this[_autoClose] = typeof opt.autoClose === 'boolean' ?\n      opt.autoClose : true\n\n    if (typeof this[_fd] === 'number') {\n      this[_read]()\n    } else {\n      this[_open]()\n    }\n  }\n\n  get fd () {\n    return this[_fd]\n  }\n\n  get path () {\n    return this[_path]\n  }\n\n  write () {\n    throw new TypeError('this is a readable stream')\n  }\n\n  end () {\n    throw new TypeError('this is a readable stream')\n  }\n\n  [_open] () {\n    fs.open(this[_path], 'r', (er, fd) => this[_onopen](er, fd))\n  }\n\n  [_onopen] (er, fd) {\n    if (er) {\n      this[_onerror](er)\n    } else {\n      this[_fd] = fd\n      this.emit('open', fd)\n      this[_read]()\n    }\n  }\n\n  [_makeBuf] () {\n    return Buffer.allocUnsafe(Math.min(this[_readSize], this[_remain]))\n  }\n\n  [_read] () {\n    if (!this[_reading]) {\n      this[_reading] = true\n      const buf = this[_makeBuf]()\n      /* istanbul ignore if */\n      if (buf.length === 0) {\n        return process.nextTick(() => this[_onread](null, 0, buf))\n      }\n      fs.read(this[_fd], buf, 0, buf.length, null, (er, br, b) =>\n        this[_onread](er, br, b))\n    }\n  }\n\n  [_onread] (er, br, buf) {\n    this[_reading] = false\n    if (er) {\n      this[_onerror](er)\n    } else if (this[_handleChunk](br, buf)) {\n      this[_read]()\n    }\n  }\n\n  [_close] () {\n    if (this[_autoClose] && typeof this[_fd] === 'number') {\n      const fd = this[_fd]\n      this[_fd] = null\n      fs.close(fd, er => er ? this.emit('error', er) : this.emit('close'))\n    }\n  }\n\n  [_onerror] (er) {\n    this[_reading] = true\n    this[_close]()\n    this.emit('error', er)\n  }\n\n  [_handleChunk] (br, buf) {\n    let ret = false\n    // no effect if infinite\n    this[_remain] -= br\n    if (br > 0) {\n      ret = super.write(br < buf.length ? buf.slice(0, br) : buf)\n    }\n\n    if (br === 0 || this[_remain] <= 0) {\n      ret = false\n      this[_close]()\n      super.end()\n    }\n\n    return ret\n  }\n\n  emit (ev, data) {\n    switch (ev) {\n      case 'prefinish':\n      case 'finish':\n        break\n\n      case 'drain':\n        if (typeof this[_fd] === 'number') {\n          this[_read]()\n        }\n        break\n\n      case 'error':\n        if (this[_errored]) {\n          return\n        }\n        this[_errored] = true\n        return super.emit(ev, data)\n\n      default:\n        return super.emit(ev, data)\n    }\n  }\n}\n\nclass ReadStreamSync extends ReadStream {\n  [_open] () {\n    let threw = true\n    try {\n      this[_onopen](null, fs.openSync(this[_path], 'r'))\n      threw = false\n    } finally {\n      if (threw) {\n        this[_close]()\n      }\n    }\n  }\n\n  [_read] () {\n    let threw = true\n    try {\n      if (!this[_reading]) {\n        this[_reading] = true\n        do {\n          const buf = this[_makeBuf]()\n          /* istanbul ignore next */\n          const br = buf.length === 0 ? 0\n            : fs.readSync(this[_fd], buf, 0, buf.length, null)\n          if (!this[_handleChunk](br, buf)) {\n            break\n          }\n        } while (true)\n        this[_reading] = false\n      }\n      threw = false\n    } finally {\n      if (threw) {\n        this[_close]()\n      }\n    }\n  }\n\n  [_close] () {\n    if (this[_autoClose] && typeof this[_fd] === 'number') {\n      const fd = this[_fd]\n      this[_fd] = null\n      fs.closeSync(fd)\n      this.emit('close')\n    }\n  }\n}\n\nclass WriteStream extends EE {\n  constructor (path, opt) {\n    opt = opt || {}\n    super(opt)\n    this.readable = false\n    this.writable = true\n    this[_errored] = false\n    this[_writing] = false\n    this[_ended] = false\n    this[_needDrain] = false\n    this[_queue] = []\n    this[_path] = path\n    this[_fd] = typeof opt.fd === 'number' ? opt.fd : null\n    this[_mode] = opt.mode === undefined ? 0o666 : opt.mode\n    this[_pos] = typeof opt.start === 'number' ? opt.start : null\n    this[_autoClose] = typeof opt.autoClose === 'boolean' ?\n      opt.autoClose : true\n\n    // truncating makes no sense when writing into the middle\n    const defaultFlag = this[_pos] !== null ? 'r+' : 'w'\n    this[_defaultFlag] = opt.flags === undefined\n    this[_flags] = this[_defaultFlag] ? defaultFlag : opt.flags\n\n    if (this[_fd] === null) {\n      this[_open]()\n    }\n  }\n\n  emit (ev, data) {\n    if (ev === 'error') {\n      if (this[_errored]) {\n        return\n      }\n      this[_errored] = true\n    }\n    return super.emit(ev, data)\n  }\n\n  get fd () {\n    return this[_fd]\n  }\n\n  get path () {\n    return this[_path]\n  }\n\n  [_onerror] (er) {\n    this[_close]()\n    this[_writing] = true\n    this.emit('error', er)\n  }\n\n  [_open] () {\n    fs.open(this[_path], this[_flags], this[_mode],\n      (er, fd) => this[_onopen](er, fd))\n  }\n\n  [_onopen] (er, fd) {\n    if (this[_defaultFlag] &&\n        this[_flags] === 'r+' &&\n        er && er.code === 'ENOENT') {\n      this[_flags] = 'w'\n      this[_open]()\n    } else if (er) {\n      this[_onerror](er)\n    } else {\n      this[_fd] = fd\n      this.emit('open', fd)\n      if (!this[_writing]) {\n        this[_flush]()\n      }\n    }\n  }\n\n  end (buf, enc) {\n    if (buf) {\n      this.write(buf, enc)\n    }\n\n    this[_ended] = true\n\n    // synthetic after-write logic, where drain/finish live\n    if (!this[_writing] && !this[_queue].length &&\n        typeof this[_fd] === 'number') {\n      this[_onwrite](null, 0)\n    }\n    return this\n  }\n\n  write (buf, enc) {\n    if (typeof buf === 'string') {\n      buf = Buffer.from(buf, enc)\n    }\n\n    if (this[_ended]) {\n      this.emit('error', new Error('write() after end()'))\n      return false\n    }\n\n    if (this[_fd] === null || this[_writing] || this[_queue].length) {\n      this[_queue].push(buf)\n      this[_needDrain] = true\n      return false\n    }\n\n    this[_writing] = true\n    this[_write](buf)\n    return true\n  }\n\n  [_write] (buf) {\n    fs.write(this[_fd], buf, 0, buf.length, this[_pos], (er, bw) =>\n      this[_onwrite](er, bw))\n  }\n\n  [_onwrite] (er, bw) {\n    if (er) {\n      this[_onerror](er)\n    } else {\n      if (this[_pos] !== null) {\n        this[_pos] += bw\n      }\n      if (this[_queue].length) {\n        this[_flush]()\n      } else {\n        this[_writing] = false\n\n        if (this[_ended] && !this[_finished]) {\n          this[_finished] = true\n          this[_close]()\n          this.emit('finish')\n        } else if (this[_needDrain]) {\n          this[_needDrain] = false\n          this.emit('drain')\n        }\n      }\n    }\n  }\n\n  [_flush] () {\n    if (this[_queue].length === 0) {\n      if (this[_ended]) {\n        this[_onwrite](null, 0)\n      }\n    } else if (this[_queue].length === 1) {\n      this[_write](this[_queue].pop())\n    } else {\n      const iovec = this[_queue]\n      this[_queue] = []\n      writev(this[_fd], iovec, this[_pos],\n        (er, bw) => this[_onwrite](er, bw))\n    }\n  }\n\n  [_close] () {\n    if (this[_autoClose] && typeof this[_fd] === 'number') {\n      const fd = this[_fd]\n      this[_fd] = null\n      fs.close(fd, er => er ? this.emit('error', er) : this.emit('close'))\n    }\n  }\n}\n\nclass WriteStreamSync extends WriteStream {\n  [_open] () {\n    let fd\n    // only wrap in a try{} block if we know we'll retry, to avoid\n    // the rethrow obscuring the error's source frame in most cases.\n    if (this[_defaultFlag] && this[_flags] === 'r+') {\n      try {\n        fd = fs.openSync(this[_path], this[_flags], this[_mode])\n      } catch (er) {\n        if (er.code === 'ENOENT') {\n          this[_flags] = 'w'\n          return this[_open]()\n        } else {\n          throw er\n        }\n      }\n    } else {\n      fd = fs.openSync(this[_path], this[_flags], this[_mode])\n    }\n\n    this[_onopen](null, fd)\n  }\n\n  [_close] () {\n    if (this[_autoClose] && typeof this[_fd] === 'number') {\n      const fd = this[_fd]\n      this[_fd] = null\n      fs.closeSync(fd)\n      this.emit('close')\n    }\n  }\n\n  [_write] (buf) {\n    // throw the original, but try to close if it fails\n    let threw = true\n    try {\n      this[_onwrite](null,\n        fs.writeSync(this[_fd], buf, 0, buf.length, this[_pos]))\n      threw = false\n    } finally {\n      if (threw) {\n        try {\n          this[_close]()\n        } catch {\n          // ok error\n        }\n      }\n    }\n  }\n}\n\nexports.ReadStream = ReadStream\nexports.ReadStreamSync = ReadStreamSync\n\nexports.WriteStream = WriteStream\nexports.WriteStreamSync = WriteStreamSync\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}