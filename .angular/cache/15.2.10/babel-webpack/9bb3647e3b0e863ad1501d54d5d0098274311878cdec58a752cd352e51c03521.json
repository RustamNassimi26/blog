{"ast":null,"code":"module.exports = extractDescription;\n\n// Extracts description from contents of a readme file in markdown format\nfunction extractDescription(d) {\n  if (!d) {\n    return;\n  }\n  if (d === 'ERROR: No README data found!') {\n    return;\n  }\n  // the first block of text before the first heading\n  // that isn't the first line heading\n  d = d.trim().split('\\n');\n  let s = 0;\n  while (d[s] && d[s].trim().match(/^(#|$)/)) {\n    s++;\n  }\n  const l = d.length;\n  let e = s + 1;\n  while (e < l && d[e].trim()) {\n    e++;\n  }\n  return d.slice(s, e).join(' ').trim();\n}","map":{"version":3,"names":["module","exports","extractDescription","d","trim","split","s","match","l","length","e","slice","join"],"sources":["I:/Angular/angular-blog/node_modules/normalize-package-data/lib/extract_description.js"],"sourcesContent":["module.exports = extractDescription\n\n// Extracts description from contents of a readme file in markdown format\nfunction extractDescription (d) {\n  if (!d) {\n    return\n  }\n  if (d === 'ERROR: No README data found!') {\n    return\n  }\n  // the first block of text before the first heading\n  // that isn't the first line heading\n  d = d.trim().split('\\n')\n  let s = 0\n  while (d[s] && d[s].trim().match(/^(#|$)/)) {\n    s++\n  }\n  const l = d.length\n  let e = s + 1\n  while (e < l && d[e].trim()) {\n    e++\n  }\n  return d.slice(s, e).join(' ').trim()\n}\n"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAGC,kBAAkB;;AAEnC;AACA,SAASA,kBAAkB,CAAEC,CAAC,EAAE;EAC9B,IAAI,CAACA,CAAC,EAAE;IACN;EACF;EACA,IAAIA,CAAC,KAAK,8BAA8B,EAAE;IACxC;EACF;EACA;EACA;EACAA,CAAC,GAAGA,CAAC,CAACC,IAAI,EAAE,CAACC,KAAK,CAAC,IAAI,CAAC;EACxB,IAAIC,CAAC,GAAG,CAAC;EACT,OAAOH,CAAC,CAACG,CAAC,CAAC,IAAIH,CAAC,CAACG,CAAC,CAAC,CAACF,IAAI,EAAE,CAACG,KAAK,CAAC,QAAQ,CAAC,EAAE;IAC1CD,CAAC,EAAE;EACL;EACA,MAAME,CAAC,GAAGL,CAAC,CAACM,MAAM;EAClB,IAAIC,CAAC,GAAGJ,CAAC,GAAG,CAAC;EACb,OAAOI,CAAC,GAAGF,CAAC,IAAIL,CAAC,CAACO,CAAC,CAAC,CAACN,IAAI,EAAE,EAAE;IAC3BM,CAAC,EAAE;EACL;EACA,OAAOP,CAAC,CAACQ,KAAK,CAACL,CAAC,EAAEI,CAAC,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC,CAACR,IAAI,EAAE;AACvC"},"metadata":{},"sourceType":"script","externalDependencies":[]}