{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginPageComponent_div_7_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u043E\\u043B\\u0435 email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginPageComponent_div_7_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u041F\\u043E\\u043B\\u0435 email \\u0434\\u043E\\u043B\\u0436\\u043D\\u043E \\u0431\\u044B\\u0442\\u044C email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginPageComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, LoginPageComponent_div_7_small_1_Template, 2, 0, \"small\", 9);\n    i0.ɵɵtemplate(2, LoginPageComponent_div_7_small_2_Template, 2, 0, \"small\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.form.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.form.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]);\n  }\n}\nfunction LoginPageComponent_div_12_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginPageComponent_div_12_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0431\\u044B\\u0442\\u044C \\u043D\\u0435 \\u043C\\u0435\\u043D\\u0435\\u0435 \", (tmp_0_0 = ctx_r5.form.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"minlength\"].requiredLength, \" \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432. \\u0421\\u0435\\u0439\\u0447\\u0430\\u0441 \\u043E\\u043D \", (tmp_0_0 = ctx_r5.form.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"minlength\"].actualLength, \" \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u0430. \");\n  }\n}\nfunction LoginPageComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, LoginPageComponent_div_12_small_1_Template, 2, 0, \"small\", 9);\n    i0.ɵɵtemplate(2, LoginPageComponent_div_12_small_2_Template, 2, 2, \"small\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.form.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r1.form.get(\"password\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    invalid: a0\n  };\n};\nexport class LoginPageComponent {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.form = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required, Validators.minLength(6)])\n    });\n  }\n  submit() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.submitted = true;\n    const user = {\n      email: this.form.value.email,\n      password: this.form.value.password\n    };\n    this.auth.login(user).subscribe(() => {\n      this.form.reset();\n      this.router.navigate(['/admin', 'dashboard']);\n      this.submitted = false;\n    });\n  }\n  static #_ = this.ɵfac = function LoginPageComponent_Factory(t) {\n    return new (t || LoginPageComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginPageComponent,\n    selectors: [[\"app-login-page\"]],\n    decls: 15,\n    vars: 10,\n    consts: [[1, \"card\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-control\", 3, \"ngClass\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\"], [\"class\", \"validation\", 4, \"ngIf\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"validation\"], [4, \"ngIf\"]],\n    template: function LoginPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginPageComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(1, \"h2\");\n        i0.ɵɵtext(2, \"\\u0412\\u043E\\u0439\\u0442\\u0438 \\u0432 \\u043F\\u0430\\u043D\\u0435\\u043B\\u044C \\u0430\\u0434\\u043C\\u0438\\u043D\\u0438\\u0441\\u0442\\u0440\\u0430\\u0442\\u043E\\u0440\\u0430\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n        i0.ɵɵtext(5, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵtemplate(7, LoginPageComponent_div_7_Template, 3, 2, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵtemplate(12, LoginPageComponent_div_12_Template, 3, 2, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 7);\n        i0.ɵɵtext(14, \"\\u0412\\u043E\\u0439\\u0442\\u0438\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        let tmp_3_0;\n        let tmp_4_0;\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ((tmp_1_0 = ctx.form.get(\"email\")) == null ? null : tmp_1_0.touched) && ((tmp_1_0 = ctx.form.get(\"email\")) == null ? null : tmp_1_0.invalid)));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.form.get(\"email\")) == null ? null : tmp_2_0.touched) && ((tmp_2_0 = ctx.form.get(\"email\")) == null ? null : tmp_2_0.invalid));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ((tmp_3_0 = ctx.form.get(\"password\")) == null ? null : tmp_3_0.touched) && ((tmp_3_0 = ctx.form.get(\"password\")) == null ? null : tmp_3_0.invalid)));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.form.get(\"password\")) == null ? null : tmp_4_0.touched) && ((tmp_4_0 = ctx.form.get(\"password\")) == null ? null : tmp_4_0.invalid));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\"form[_ngcontent-%COMP%] {\\n  max-width: 600px;\\n  margin: 0 auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4vbG9naW4tcGFnZS9sb2dpbi1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7RUFDQSxjQUFBO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJmb3JtIHtcclxuICBtYXgtd2lkdGg6IDYwMHB4O1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAAQA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAO,gBAAgB;;;;;;;;ICY3DC,6BAAuD;IACrDA,2FACF;IAAAA,iBAAQ;;;;;IACRA,6BAAoD;IAClDA,oHACF;IAAAA,iBAAQ;;;;;IATVA,8BAGC;IACCA,6EAEQ;IACRA,6EAEQ;IACVA,iBAAM;;;;;;IANIA,eAA6C;IAA7CA,uIAA6C;IAG7CA,eAA0C;IAA1CA,oIAA0C;;;;;IAgBlDA,6BAA0D;IACxDA,iGACF;IAAAA,iBAAQ;;;;;IACRA,6BAA2D;IACzDA,YAKF;IAAAA,iBAAQ;;;;;IALNA,eAKF;IALEA,2kBAKF;;;;;IAbFA,8BAGC;IACCA,8EAEQ;IACRA,8EAMQ;IACVA,iBAAM;;;;;;IAVIA,eAAgD;IAAhDA,0IAAgD;IAGhDA,eAAiD;IAAjDA,2IAAiD;;;;;;;;ADxB/D,OAAM,MAAOC,kBAAkB;EAK7BC,YACUC,IAAiB,EACjBC,MAAc;IADd,SAAI,GAAJD,IAAI;IACJ,WAAM,GAANC,MAAM;IAJhB,cAAS,GAAG,KAAK;EAMjB;EAEAC,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,IAAIR,SAAS,CAAC;MACxBS,KAAK,EAAE,IAAIV,WAAW,CAAC,IAAI,EAAE,CAC3BE,UAAU,CAACS,QAAQ,EACnBT,UAAU,CAACQ,KAAK,CACjB,CAAC;MACFE,QAAQ,EAAE,IAAIZ,WAAW,CAAC,IAAI,EAAE,CAC9BE,UAAU,CAACS,QAAQ,EACnBT,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,CACxB;KACF,CAAC;EACJ;EAEAC,MAAM;IACJ,IAAI,IAAI,CAACL,IAAI,CAACM,OAAO,EAAE;MACrB;;IAGF,IAAI,CAACC,SAAS,GAAG,IAAI;IAErB,MAAMC,IAAI,GAAS;MACjBP,KAAK,EAAE,IAAI,CAACD,IAAI,CAACS,KAAK,CAACR,KAAK;MAC5BE,QAAQ,EAAE,IAAI,CAACH,IAAI,CAACS,KAAK,CAACN;KAC3B;IAED,IAAI,CAACN,IAAI,CAACa,KAAK,CAACF,IAAI,CAAC,CAACG,SAAS,CAAC,MAAK;MACnC,IAAI,CAACX,IAAI,CAACY,KAAK,EAAE;MACjB,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;MAC7C,IAAI,CAACN,SAAS,GAAG,KAAK;IACxB,CAAC,CAAC;EACJ;EAAC;qBAzCUZ,kBAAkB;EAAA;EAAA;UAAlBA,kBAAkB;IAAAmB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCX/BxB,+BAA4D;QAAtBA;UAAA,OAAYyB,YAAQ;QAAA,EAAC;QACzDzB,0BAAI;QAAAA,+KAA6B;QAAAA,iBAAK;QAEtCA,8BAGC;QACoBA,sBAAM;QAAAA,iBAAQ;QACjCA,2BAAuD;QACvDA,mEAUM;QACRA,iBAAM;QAENA,8BAGC;QACuBA,sDAAO;QAAAA,iBAAQ;QACrCA,4BAAgE;QAChEA,qEAcM;QACRA,iBAAM;QAENA,kCAIC;QAAAA,+CAAK;QAAAA,iBAAS;;;;;;;QAjDEA,oCAAkB;QAKjCA,eAA+E;QAA/EA,kMAA+E;QAK5EA,eAA8D;QAA9DA,mKAA8D;QAcjEA,eAAqF;QAArFA,wMAAqF;QAMlFA,eAAoE;QAApEA,yKAAoE;QAkBvEA,eAAyB;QAAzBA,2CAAyB","names":["FormControl","FormGroup","Validators","i0","LoginPageComponent","constructor","auth","router","ngOnInit","form","email","required","password","minLength","submit","invalid","submitted","user","value","login","subscribe","reset","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["I:\\Angular\\angular-blog\\src\\app\\admin\\login-page\\login-page.component.ts","I:\\Angular\\angular-blog\\src\\app\\admin\\login-page\\login-page.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core'\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {User} from '../../shared/interfaces';\nimport {AuthService} from '../shared/services/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n\n  form!: FormGroup;\n  submitted = false\n\n  constructor(\n    private auth: AuthService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(6)\n      ])\n    })\n  }\n\n  submit() {\n    if (this.form.invalid) {\n      return\n    }\n\n    this.submitted = true\n\n    const user: User = {\n      email: this.form.value.email,\n      password: this.form.value.password\n    }\n\n    this.auth.login(user).subscribe(() => {\n      this.form.reset()\n      this.router.navigate(['/admin', 'dashboard'])\n      this.submitted = false\n    })\n  }\n}\n\n","<form class=\"card\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n  <h2>Войти в панель администратора</h2>\n\n  <div\n    class=\"form-control\"\n    [ngClass]=\"{invalid: form.get('email')?.touched && form.get('email')?.invalid}\"\n  >\n    <label for=\"email\">Email:</label>\n    <input id=\"email\" type=\"email\" formControlName=\"email\">\n    <div\n      *ngIf=\"form.get('email')?.touched && form.get('email')?.invalid\"\n      class=\"validation\"\n    >\n      <small *ngIf=\"form.get('email')?.errors?.['required']\">\n        Введите поле email\n      </small>\n      <small *ngIf=\"form.get('email')?.errors?.['email']\">\n        Поле email должно быть email\n      </small>\n    </div>\n  </div>\n\n  <div\n    class=\"form-control\"\n    [ngClass]=\"{invalid: form.get('password')?.touched && form.get('password')?.invalid}\"\n  >\n    <label for=\"password\">Пароль:</label>\n    <input id=\"password\" type=\"password\" formControlName=\"password\">\n    <div\n      class=\"validation\"\n      *ngIf=\"form.get('password')?.touched && form.get('password')?.invalid\"\n    >\n      <small *ngIf=\"form.get('password')?.errors?.['required']\">\n        Введите пароль\n      </small>\n      <small *ngIf=\"form.get('password')?.errors?.['minlength']\">\n        Пароль должен быть не менее\n        {{form.get('password')?.errors?.['minlength'].requiredLength}}\n        символов. Сейчас он\n        {{form.get('password')?.errors?.['minlength'].actualLength}}\n        символа.\n      </small>\n    </div>\n  </div>\n\n  <button\n    type=\"submit\"\n    class=\"btn btn-primary\"\n    [disabled]=\"form.invalid\"\n  >Войти</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}