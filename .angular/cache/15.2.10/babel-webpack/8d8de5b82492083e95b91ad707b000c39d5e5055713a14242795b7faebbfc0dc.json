{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.writeErrorToLogFile = void 0;\nconst fs_1 = require(\"fs\");\nconst os_1 = require(\"os\");\nconst path_1 = require(\"path\");\nlet logPath;\n/**\n * Writes an Error to a temporary log file.\n * If this method is called multiple times from the same process the same log file will be used.\n * @returns The path of the generated log file.\n */\nfunction writeErrorToLogFile(error) {\n  if (!logPath) {\n    const tempDirectory = (0, fs_1.mkdtempSync)((0, fs_1.realpathSync)((0, os_1.tmpdir)()) + '/ng-');\n    logPath = (0, path_1.normalize)(tempDirectory + '/angular-errors.log');\n  }\n  (0, fs_1.appendFileSync)(logPath, '[error] ' + (error.stack || error) + '\\n\\n');\n  return logPath;\n}\nexports.writeErrorToLogFile = writeErrorToLogFile;","map":{"version":3,"names":["Object","defineProperty","exports","value","writeErrorToLogFile","fs_1","require","os_1","path_1","logPath","error","tempDirectory","mkdtempSync","realpathSync","tmpdir","normalize","appendFileSync","stack"],"sources":["I:/Angular/angular-blog/node_modules/@angular/cli/src/utilities/log-file.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.writeErrorToLogFile = void 0;\nconst fs_1 = require(\"fs\");\nconst os_1 = require(\"os\");\nconst path_1 = require(\"path\");\nlet logPath;\n/**\n * Writes an Error to a temporary log file.\n * If this method is called multiple times from the same process the same log file will be used.\n * @returns The path of the generated log file.\n */\nfunction writeErrorToLogFile(error) {\n    if (!logPath) {\n        const tempDirectory = (0, fs_1.mkdtempSync)((0, fs_1.realpathSync)((0, os_1.tmpdir)()) + '/ng-');\n        logPath = (0, path_1.normalize)(tempDirectory + '/angular-errors.log');\n    }\n    (0, fs_1.appendFileSync)(logPath, '[error] ' + (error.stack || error) + '\\n\\n');\n    return logPath;\n}\nexports.writeErrorToLogFile = writeErrorToLogFile;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,mBAAmB,GAAG,KAAK,CAAC;AACpC,MAAMC,IAAI,GAAGC,OAAO,CAAC,IAAI,CAAC;AAC1B,MAAMC,IAAI,GAAGD,OAAO,CAAC,IAAI,CAAC;AAC1B,MAAME,MAAM,GAAGF,OAAO,CAAC,MAAM,CAAC;AAC9B,IAAIG,OAAO;AACX;AACA;AACA;AACA;AACA;AACA,SAASL,mBAAmB,CAACM,KAAK,EAAE;EAChC,IAAI,CAACD,OAAO,EAAE;IACV,MAAME,aAAa,GAAG,CAAC,CAAC,EAAEN,IAAI,CAACO,WAAW,EAAE,CAAC,CAAC,EAAEP,IAAI,CAACQ,YAAY,EAAE,CAAC,CAAC,EAAEN,IAAI,CAACO,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC;IAChGL,OAAO,GAAG,CAAC,CAAC,EAAED,MAAM,CAACO,SAAS,EAAEJ,aAAa,GAAG,qBAAqB,CAAC;EAC1E;EACA,CAAC,CAAC,EAAEN,IAAI,CAACW,cAAc,EAAEP,OAAO,EAAE,UAAU,IAAIC,KAAK,CAACO,KAAK,IAAIP,KAAK,CAAC,GAAG,MAAM,CAAC;EAC/E,OAAOD,OAAO;AAClB;AACAP,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}