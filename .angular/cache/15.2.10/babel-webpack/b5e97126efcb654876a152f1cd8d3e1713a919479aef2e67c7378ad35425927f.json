{"ast":null,"code":"const spawn = require('@npmcli/promise-spawn');\nconst promiseRetry = require('promise-retry');\nconst log = require('proc-log');\nconst makeError = require('./make-error.js');\nconst whichGit = require('./which.js');\nconst makeOpts = require('./opts.js');\nmodule.exports = (gitArgs, opts = {}) => {\n  const gitPath = whichGit(opts);\n  if (gitPath instanceof Error) {\n    return Promise.reject(gitPath);\n  }\n\n  // undocumented option, mostly only here for tests\n  const args = opts.allowReplace || gitArgs[0] === '--no-replace-objects' ? gitArgs : ['--no-replace-objects', ...gitArgs];\n  let retryOpts = opts.retry;\n  if (retryOpts === null || retryOpts === undefined) {\n    retryOpts = {\n      retries: opts.fetchRetries || 2,\n      factor: opts.fetchRetryFactor || 10,\n      maxTimeout: opts.fetchRetryMaxtimeout || 60000,\n      minTimeout: opts.fetchRetryMintimeout || 1000\n    };\n  }\n  return promiseRetry((retryFn, number) => {\n    if (number !== 1) {\n      log.silly('git', `Retrying git command: ${args.join(' ')} attempt # ${number}`);\n    }\n    return spawn(gitPath, args, makeOpts(opts)).catch(er => {\n      const gitError = makeError(er);\n      if (!gitError.shouldRetry(number)) {\n        throw gitError;\n      }\n      retryFn(gitError);\n    });\n  }, retryOpts);\n};","map":{"version":3,"names":["spawn","require","promiseRetry","log","makeError","whichGit","makeOpts","module","exports","gitArgs","opts","gitPath","Error","Promise","reject","args","allowReplace","retryOpts","retry","undefined","retries","fetchRetries","factor","fetchRetryFactor","maxTimeout","fetchRetryMaxtimeout","minTimeout","fetchRetryMintimeout","retryFn","number","silly","join","catch","er","gitError","shouldRetry"],"sources":["I:/Angular/angular-blog/node_modules/@npmcli/git/lib/spawn.js"],"sourcesContent":["const spawn = require('@npmcli/promise-spawn')\nconst promiseRetry = require('promise-retry')\nconst log = require('proc-log')\nconst makeError = require('./make-error.js')\nconst whichGit = require('./which.js')\nconst makeOpts = require('./opts.js')\n\nmodule.exports = (gitArgs, opts = {}) => {\n  const gitPath = whichGit(opts)\n\n  if (gitPath instanceof Error) {\n    return Promise.reject(gitPath)\n  }\n\n  // undocumented option, mostly only here for tests\n  const args = opts.allowReplace || gitArgs[0] === '--no-replace-objects'\n    ? gitArgs\n    : ['--no-replace-objects', ...gitArgs]\n\n  let retryOpts = opts.retry\n  if (retryOpts === null || retryOpts === undefined) {\n    retryOpts = {\n      retries: opts.fetchRetries || 2,\n      factor: opts.fetchRetryFactor || 10,\n      maxTimeout: opts.fetchRetryMaxtimeout || 60000,\n      minTimeout: opts.fetchRetryMintimeout || 1000,\n    }\n  }\n  return promiseRetry((retryFn, number) => {\n    if (number !== 1) {\n      log.silly('git', `Retrying git command: ${\n        args.join(' ')} attempt # ${number}`)\n    }\n\n    return spawn(gitPath, args, makeOpts(opts))\n      .catch(er => {\n        const gitError = makeError(er)\n        if (!gitError.shouldRetry(number)) {\n          throw gitError\n        }\n        retryFn(gitError)\n      })\n  }, retryOpts)\n}\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAC9C,MAAMC,YAAY,GAAGD,OAAO,CAAC,eAAe,CAAC;AAC7C,MAAME,GAAG,GAAGF,OAAO,CAAC,UAAU,CAAC;AAC/B,MAAMG,SAAS,GAAGH,OAAO,CAAC,iBAAiB,CAAC;AAC5C,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,YAAY,CAAC;AACtC,MAAMK,QAAQ,GAAGL,OAAO,CAAC,WAAW,CAAC;AAErCM,MAAM,CAACC,OAAO,GAAG,CAACC,OAAO,EAAEC,IAAI,GAAG,CAAC,CAAC,KAAK;EACvC,MAAMC,OAAO,GAAGN,QAAQ,CAACK,IAAI,CAAC;EAE9B,IAAIC,OAAO,YAAYC,KAAK,EAAE;IAC5B,OAAOC,OAAO,CAACC,MAAM,CAACH,OAAO,CAAC;EAChC;;EAEA;EACA,MAAMI,IAAI,GAAGL,IAAI,CAACM,YAAY,IAAIP,OAAO,CAAC,CAAC,CAAC,KAAK,sBAAsB,GACnEA,OAAO,GACP,CAAC,sBAAsB,EAAE,GAAGA,OAAO,CAAC;EAExC,IAAIQ,SAAS,GAAGP,IAAI,CAACQ,KAAK;EAC1B,IAAID,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAKE,SAAS,EAAE;IACjDF,SAAS,GAAG;MACVG,OAAO,EAAEV,IAAI,CAACW,YAAY,IAAI,CAAC;MAC/BC,MAAM,EAAEZ,IAAI,CAACa,gBAAgB,IAAI,EAAE;MACnCC,UAAU,EAAEd,IAAI,CAACe,oBAAoB,IAAI,KAAK;MAC9CC,UAAU,EAAEhB,IAAI,CAACiB,oBAAoB,IAAI;IAC3C,CAAC;EACH;EACA,OAAOzB,YAAY,CAAC,CAAC0B,OAAO,EAAEC,MAAM,KAAK;IACvC,IAAIA,MAAM,KAAK,CAAC,EAAE;MAChB1B,GAAG,CAAC2B,KAAK,CAAC,KAAK,EAAG,yBAChBf,IAAI,CAACgB,IAAI,CAAC,GAAG,CAAE,cAAaF,MAAO,EAAC,CAAC;IACzC;IAEA,OAAO7B,KAAK,CAACW,OAAO,EAAEI,IAAI,EAAET,QAAQ,CAACI,IAAI,CAAC,CAAC,CACxCsB,KAAK,CAACC,EAAE,IAAI;MACX,MAAMC,QAAQ,GAAG9B,SAAS,CAAC6B,EAAE,CAAC;MAC9B,IAAI,CAACC,QAAQ,CAACC,WAAW,CAACN,MAAM,CAAC,EAAE;QACjC,MAAMK,QAAQ;MAChB;MACAN,OAAO,CAACM,QAAQ,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAEjB,SAAS,CAAC;AACf,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}