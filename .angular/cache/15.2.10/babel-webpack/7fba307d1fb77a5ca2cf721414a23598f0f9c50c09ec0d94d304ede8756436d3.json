{"ast":null,"code":"/* eslint camelcase: \"off\" */\nconst setPATH = require('./set-path.js');\nconst {\n  resolve\n} = require('path');\nconst npm_config_node_gyp = require.resolve('node-gyp/bin/node-gyp.js');\nconst makeSpawnArgs = options => {\n  const {\n    event,\n    path,\n    scriptShell = true,\n    binPaths,\n    env = {},\n    stdio,\n    cmd,\n    args = [],\n    stdioString\n  } = options;\n  const spawnEnv = setPATH(path, binPaths, {\n    // we need to at least save the PATH environment var\n    ...process.env,\n    ...env,\n    npm_package_json: resolve(path, 'package.json'),\n    npm_lifecycle_event: event,\n    npm_lifecycle_script: cmd,\n    npm_config_node_gyp\n  });\n  const spawnOpts = {\n    env: spawnEnv,\n    stdioString,\n    stdio,\n    cwd: path,\n    shell: scriptShell\n  };\n  return [cmd, args, spawnOpts];\n};\nmodule.exports = makeSpawnArgs;","map":{"version":3,"names":["setPATH","require","resolve","npm_config_node_gyp","makeSpawnArgs","options","event","path","scriptShell","binPaths","env","stdio","cmd","args","stdioString","spawnEnv","process","npm_package_json","npm_lifecycle_event","npm_lifecycle_script","spawnOpts","cwd","shell","module","exports"],"sources":["I:/Angular/angular-blog/node_modules/@npmcli/run-script/lib/make-spawn-args.js"],"sourcesContent":["/* eslint camelcase: \"off\" */\nconst setPATH = require('./set-path.js')\nconst { resolve } = require('path')\nconst npm_config_node_gyp = require.resolve('node-gyp/bin/node-gyp.js')\n\nconst makeSpawnArgs = options => {\n  const {\n    event,\n    path,\n    scriptShell = true,\n    binPaths,\n    env = {},\n    stdio,\n    cmd,\n    args = [],\n    stdioString,\n  } = options\n\n  const spawnEnv = setPATH(path, binPaths, {\n    // we need to at least save the PATH environment var\n    ...process.env,\n    ...env,\n    npm_package_json: resolve(path, 'package.json'),\n    npm_lifecycle_event: event,\n    npm_lifecycle_script: cmd,\n    npm_config_node_gyp,\n  })\n\n  const spawnOpts = {\n    env: spawnEnv,\n    stdioString,\n    stdio,\n    cwd: path,\n    shell: scriptShell,\n  }\n\n  return [cmd, args, spawnOpts]\n}\n\nmodule.exports = makeSpawnArgs\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,eAAe,CAAC;AACxC,MAAM;EAAEC;AAAQ,CAAC,GAAGD,OAAO,CAAC,MAAM,CAAC;AACnC,MAAME,mBAAmB,GAAGF,OAAO,CAACC,OAAO,CAAC,0BAA0B,CAAC;AAEvE,MAAME,aAAa,GAAGC,OAAO,IAAI;EAC/B,MAAM;IACJC,KAAK;IACLC,IAAI;IACJC,WAAW,GAAG,IAAI;IAClBC,QAAQ;IACRC,GAAG,GAAG,CAAC,CAAC;IACRC,KAAK;IACLC,GAAG;IACHC,IAAI,GAAG,EAAE;IACTC;EACF,CAAC,GAAGT,OAAO;EAEX,MAAMU,QAAQ,GAAGf,OAAO,CAACO,IAAI,EAAEE,QAAQ,EAAE;IACvC;IACA,GAAGO,OAAO,CAACN,GAAG;IACd,GAAGA,GAAG;IACNO,gBAAgB,EAAEf,OAAO,CAACK,IAAI,EAAE,cAAc,CAAC;IAC/CW,mBAAmB,EAAEZ,KAAK;IAC1Ba,oBAAoB,EAAEP,GAAG;IACzBT;EACF,CAAC,CAAC;EAEF,MAAMiB,SAAS,GAAG;IAChBV,GAAG,EAAEK,QAAQ;IACbD,WAAW;IACXH,KAAK;IACLU,GAAG,EAAEd,IAAI;IACTe,KAAK,EAAEd;EACT,CAAC;EAED,OAAO,CAACI,GAAG,EAAEC,IAAI,EAAEO,SAAS,CAAC;AAC/B,CAAC;AAEDG,MAAM,CAACC,OAAO,GAAGpB,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}