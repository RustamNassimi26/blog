{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.subscribeToWorkflow = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst color_1 = require(\"../../utilities/color\");\nfunction subscribeToWorkflow(workflow, logger) {\n  const files = new Set();\n  let error = false;\n  let logs = [];\n  const reporterSubscription = workflow.reporter.subscribe(event => {\n    // Strip leading slash to prevent confusion.\n    const eventPath = event.path.charAt(0) === '/' ? event.path.substring(1) : event.path;\n    switch (event.kind) {\n      case 'error':\n        error = true;\n        const desc = event.description == 'alreadyExist' ? 'already exists' : 'does not exist';\n        logger.error(`ERROR! ${eventPath} ${desc}.`);\n        break;\n      case 'update':\n        logs.push(core_1.tags.oneLine`\n              ${color_1.colors.cyan('UPDATE')} ${eventPath} (${event.content.length} bytes)\n            `);\n        files.add(eventPath);\n        break;\n      case 'create':\n        logs.push(core_1.tags.oneLine`\n              ${color_1.colors.green('CREATE')} ${eventPath} (${event.content.length} bytes)\n            `);\n        files.add(eventPath);\n        break;\n      case 'delete':\n        logs.push(`${color_1.colors.yellow('DELETE')} ${eventPath}`);\n        files.add(eventPath);\n        break;\n      case 'rename':\n        const eventToPath = event.to.charAt(0) === '/' ? event.to.substring(1) : event.to;\n        logs.push(`${color_1.colors.blue('RENAME')} ${eventPath} => ${eventToPath}`);\n        files.add(eventPath);\n        break;\n    }\n  });\n  const lifecycleSubscription = workflow.lifeCycle.subscribe(event => {\n    if (event.kind == 'end' || event.kind == 'post-tasks-start') {\n      if (!error) {\n        // Output the logging queue, no error happened.\n        logs.forEach(log => logger.info(log));\n      }\n      logs = [];\n      error = false;\n    }\n  });\n  return {\n    files,\n    error,\n    unsubscribe: () => {\n      reporterSubscription.unsubscribe();\n      lifecycleSubscription.unsubscribe();\n    }\n  };\n}\nexports.subscribeToWorkflow = subscribeToWorkflow;","map":{"version":3,"names":["Object","defineProperty","exports","value","subscribeToWorkflow","core_1","require","color_1","workflow","logger","files","Set","error","logs","reporterSubscription","reporter","subscribe","event","eventPath","path","charAt","substring","kind","desc","description","push","tags","oneLine","colors","cyan","content","length","add","green","yellow","eventToPath","to","blue","lifecycleSubscription","lifeCycle","forEach","log","info","unsubscribe"],"sources":["I:/Angular/angular-blog/node_modules/@angular/cli/src/command-builder/utilities/schematic-workflow.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.subscribeToWorkflow = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst color_1 = require(\"../../utilities/color\");\nfunction subscribeToWorkflow(workflow, logger) {\n    const files = new Set();\n    let error = false;\n    let logs = [];\n    const reporterSubscription = workflow.reporter.subscribe((event) => {\n        // Strip leading slash to prevent confusion.\n        const eventPath = event.path.charAt(0) === '/' ? event.path.substring(1) : event.path;\n        switch (event.kind) {\n            case 'error':\n                error = true;\n                const desc = event.description == 'alreadyExist' ? 'already exists' : 'does not exist';\n                logger.error(`ERROR! ${eventPath} ${desc}.`);\n                break;\n            case 'update':\n                logs.push(core_1.tags.oneLine `\n              ${color_1.colors.cyan('UPDATE')} ${eventPath} (${event.content.length} bytes)\n            `);\n                files.add(eventPath);\n                break;\n            case 'create':\n                logs.push(core_1.tags.oneLine `\n              ${color_1.colors.green('CREATE')} ${eventPath} (${event.content.length} bytes)\n            `);\n                files.add(eventPath);\n                break;\n            case 'delete':\n                logs.push(`${color_1.colors.yellow('DELETE')} ${eventPath}`);\n                files.add(eventPath);\n                break;\n            case 'rename':\n                const eventToPath = event.to.charAt(0) === '/' ? event.to.substring(1) : event.to;\n                logs.push(`${color_1.colors.blue('RENAME')} ${eventPath} => ${eventToPath}`);\n                files.add(eventPath);\n                break;\n        }\n    });\n    const lifecycleSubscription = workflow.lifeCycle.subscribe((event) => {\n        if (event.kind == 'end' || event.kind == 'post-tasks-start') {\n            if (!error) {\n                // Output the logging queue, no error happened.\n                logs.forEach((log) => logger.info(log));\n            }\n            logs = [];\n            error = false;\n        }\n    });\n    return {\n        files,\n        error,\n        unsubscribe: () => {\n            reporterSubscription.unsubscribe();\n            lifecycleSubscription.unsubscribe();\n        },\n    };\n}\nexports.subscribeToWorkflow = subscribeToWorkflow;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}