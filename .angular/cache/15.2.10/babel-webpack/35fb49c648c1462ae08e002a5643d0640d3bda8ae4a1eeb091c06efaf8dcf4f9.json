{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertValidPattern = void 0;\nconst MAX_PATTERN_LENGTH = 1024 * 64;\nconst assertValidPattern = pattern => {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern');\n  }\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long');\n  }\n};\nexports.assertValidPattern = assertValidPattern;","map":{"version":3,"names":["Object","defineProperty","exports","value","assertValidPattern","MAX_PATTERN_LENGTH","pattern","TypeError","length"],"sources":["I:/Angular/angular-blog/node_modules/ignore-walk/node_modules/minimatch/dist/cjs/assert-valid-pattern.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertValidPattern = void 0;\nconst MAX_PATTERN_LENGTH = 1024 * 64;\nconst assertValidPattern = (pattern) => {\n    if (typeof pattern !== 'string') {\n        throw new TypeError('invalid pattern');\n    }\n    if (pattern.length > MAX_PATTERN_LENGTH) {\n        throw new TypeError('pattern is too long');\n    }\n};\nexports.assertValidPattern = assertValidPattern;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,kBAAkB,GAAG,KAAK,CAAC;AACnC,MAAMC,kBAAkB,GAAG,IAAI,GAAG,EAAE;AACpC,MAAMD,kBAAkB,GAAIE,OAAO,IAAK;EACpC,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;IAC7B,MAAM,IAAIC,SAAS,CAAC,iBAAiB,CAAC;EAC1C;EACA,IAAID,OAAO,CAACE,MAAM,GAAGH,kBAAkB,EAAE;IACrC,MAAM,IAAIE,SAAS,CAAC,qBAAqB,CAAC;EAC9C;AACJ,CAAC;AACDL,OAAO,CAACE,kBAAkB,GAAGA,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}