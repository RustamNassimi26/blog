{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _asyncToGenerator = require(\"I:/Angular/angular-blog/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RunCommandModule = void 0;\nconst path_1 = require(\"path\");\nconst architect_base_command_module_1 = require(\"../../command-builder/architect-base-command-module\");\nconst command_module_1 = require(\"../../command-builder/command-module\");\nclass RunCommandModule extends architect_base_command_module_1.ArchitectBaseCommandModule {\n  constructor() {\n    super(...arguments);\n    this.scope = command_module_1.CommandScope.In;\n    this.command = 'run <target>';\n    this.describe = 'Runs an Architect target with an optional custom builder configuration defined in your project.';\n    this.longDescriptionPath = (0, path_1.join)(__dirname, 'long-description.md');\n  }\n  builder(argv) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const {\n        jsonHelp,\n        getYargsCompletions,\n        help\n      } = _this.context.args.options;\n      const localYargs = argv.positional('target', {\n        describe: 'The Architect target to run.',\n        type: 'string',\n        demandOption: true,\n        // Show only in when using --help and auto completion because otherwise comma seperated configuration values will be invalid.\n        // Also, hide choices from JSON help so that we don't display them in AIO.\n        choices: (getYargsCompletions || help) && !jsonHelp ? _this.getTargetChoices() : undefined\n      }).middleware(args => {\n        // TODO: remove in version 15.\n        const {\n          configuration,\n          target\n        } = args;\n        if (typeof configuration === 'string' && target) {\n          const targetWithConfig = target.split(':', 2);\n          targetWithConfig.push(configuration);\n          throw new command_module_1.CommandModuleError('Unknown argument: configuration.\\n' + `Provide the configuration as part of the target 'ng run ${targetWithConfig.join(':')}'.`);\n        }\n      }, true).strict();\n      const target = _this.makeTargetSpecifier();\n      if (!target) {\n        return localYargs;\n      }\n      const schemaOptions = yield _this.getArchitectTargetOptions(target);\n      return _this.addSchemaOptionsToCommand(localYargs, schemaOptions);\n    })();\n  }\n  run(options) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const target = _this2.makeTargetSpecifier(options);\n      const {\n        target: _target,\n        ...extraOptions\n      } = options;\n      if (!target) {\n        throw new command_module_1.CommandModuleError('Cannot determine project or target.');\n      }\n      return _this2.runSingleTarget(target, extraOptions);\n    })();\n  }\n  makeTargetSpecifier(options) {\n    var _a;\n    const architectTarget = (_a = options === null || options === void 0 ? void 0 : options.target) !== null && _a !== void 0 ? _a : this.context.args.positional[1];\n    if (!architectTarget) {\n      return undefined;\n    }\n    const [project = '', target = '', configuration] = architectTarget.split(':');\n    return {\n      project,\n      target,\n      configuration\n    };\n  }\n  /** @returns a sorted list of target specifiers to be used for auto completion. */\n  getTargetChoices() {\n    if (!this.context.workspace) {\n      return;\n    }\n    const targets = [];\n    for (const [projectName, project] of this.context.workspace.projects) {\n      for (const [targetName, target] of project.targets) {\n        const currentTarget = `${projectName}:${targetName}`;\n        targets.push(currentTarget);\n        if (!target.configurations) {\n          continue;\n        }\n        for (const configName of Object.keys(target.configurations)) {\n          targets.push(`${currentTarget}:${configName}`);\n        }\n      }\n    }\n    return targets.sort();\n  }\n}\nexports.RunCommandModule = RunCommandModule;","map":{"version":3,"names":["Object","defineProperty","exports","value","RunCommandModule","path_1","require","architect_base_command_module_1","command_module_1","ArchitectBaseCommandModule","constructor","arguments","scope","CommandScope","In","command","describe","longDescriptionPath","join","__dirname","builder","argv","jsonHelp","getYargsCompletions","help","context","args","options","localYargs","positional","type","demandOption","choices","getTargetChoices","undefined","middleware","configuration","target","targetWithConfig","split","push","CommandModuleError","strict","makeTargetSpecifier","schemaOptions","getArchitectTargetOptions","addSchemaOptionsToCommand","run","_target","extraOptions","runSingleTarget","_a","architectTarget","project","workspace","targets","projectName","projects","targetName","currentTarget","configurations","configName","keys","sort"],"sources":["I:/Angular/angular-blog/node_modules/@angular/cli/src/commands/run/cli.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RunCommandModule = void 0;\nconst path_1 = require(\"path\");\nconst architect_base_command_module_1 = require(\"../../command-builder/architect-base-command-module\");\nconst command_module_1 = require(\"../../command-builder/command-module\");\nclass RunCommandModule extends architect_base_command_module_1.ArchitectBaseCommandModule {\n    constructor() {\n        super(...arguments);\n        this.scope = command_module_1.CommandScope.In;\n        this.command = 'run <target>';\n        this.describe = 'Runs an Architect target with an optional custom builder configuration defined in your project.';\n        this.longDescriptionPath = (0, path_1.join)(__dirname, 'long-description.md');\n    }\n    async builder(argv) {\n        const { jsonHelp, getYargsCompletions, help } = this.context.args.options;\n        const localYargs = argv\n            .positional('target', {\n            describe: 'The Architect target to run.',\n            type: 'string',\n            demandOption: true,\n            // Show only in when using --help and auto completion because otherwise comma seperated configuration values will be invalid.\n            // Also, hide choices from JSON help so that we don't display them in AIO.\n            choices: (getYargsCompletions || help) && !jsonHelp ? this.getTargetChoices() : undefined,\n        })\n            .middleware((args) => {\n            // TODO: remove in version 15.\n            const { configuration, target } = args;\n            if (typeof configuration === 'string' && target) {\n                const targetWithConfig = target.split(':', 2);\n                targetWithConfig.push(configuration);\n                throw new command_module_1.CommandModuleError('Unknown argument: configuration.\\n' +\n                    `Provide the configuration as part of the target 'ng run ${targetWithConfig.join(':')}'.`);\n            }\n        }, true)\n            .strict();\n        const target = this.makeTargetSpecifier();\n        if (!target) {\n            return localYargs;\n        }\n        const schemaOptions = await this.getArchitectTargetOptions(target);\n        return this.addSchemaOptionsToCommand(localYargs, schemaOptions);\n    }\n    async run(options) {\n        const target = this.makeTargetSpecifier(options);\n        const { target: _target, ...extraOptions } = options;\n        if (!target) {\n            throw new command_module_1.CommandModuleError('Cannot determine project or target.');\n        }\n        return this.runSingleTarget(target, extraOptions);\n    }\n    makeTargetSpecifier(options) {\n        var _a;\n        const architectTarget = (_a = options === null || options === void 0 ? void 0 : options.target) !== null && _a !== void 0 ? _a : this.context.args.positional[1];\n        if (!architectTarget) {\n            return undefined;\n        }\n        const [project = '', target = '', configuration] = architectTarget.split(':');\n        return {\n            project,\n            target,\n            configuration,\n        };\n    }\n    /** @returns a sorted list of target specifiers to be used for auto completion. */\n    getTargetChoices() {\n        if (!this.context.workspace) {\n            return;\n        }\n        const targets = [];\n        for (const [projectName, project] of this.context.workspace.projects) {\n            for (const [targetName, target] of project.targets) {\n                const currentTarget = `${projectName}:${targetName}`;\n                targets.push(currentTarget);\n                if (!target.configurations) {\n                    continue;\n                }\n                for (const configName of Object.keys(target.configurations)) {\n                    targets.push(`${currentTarget}:${configName}`);\n                }\n            }\n        }\n        return targets.sort();\n    }\n}\nexports.RunCommandModule = RunCommandModule;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}