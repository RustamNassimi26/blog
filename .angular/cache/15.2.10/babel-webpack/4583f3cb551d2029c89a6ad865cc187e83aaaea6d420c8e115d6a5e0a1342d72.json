{"ast":null,"code":"// add a sha to a git remote url spec\nconst addGitSha = (spec, sha) => {\n  if (spec.hosted) {\n    const h = spec.hosted;\n    const opt = {\n      noCommittish: true\n    };\n    const base = h.https && h.auth ? h.https(opt) : h.shortcut(opt);\n    return `${base}#${sha}`;\n  } else {\n    // don't use new URL for this, because it doesn't handle scp urls\n    return spec.rawSpec.replace(/#.*$/, '') + `#${sha}`;\n  }\n};\nmodule.exports = addGitSha;","map":{"version":3,"names":["addGitSha","spec","sha","hosted","h","opt","noCommittish","base","https","auth","shortcut","rawSpec","replace","module","exports"],"sources":["I:/Angular/angular-blog/node_modules/pacote/lib/util/add-git-sha.js"],"sourcesContent":["// add a sha to a git remote url spec\nconst addGitSha = (spec, sha) => {\n  if (spec.hosted) {\n    const h = spec.hosted\n    const opt = { noCommittish: true }\n    const base = h.https && h.auth ? h.https(opt) : h.shortcut(opt)\n\n    return `${base}#${sha}`\n  } else {\n    // don't use new URL for this, because it doesn't handle scp urls\n    return spec.rawSpec.replace(/#.*$/, '') + `#${sha}`\n  }\n}\n\nmodule.exports = addGitSha\n"],"mappings":"AAAA;AACA,MAAMA,SAAS,GAAG,CAACC,IAAI,EAAEC,GAAG,KAAK;EAC/B,IAAID,IAAI,CAACE,MAAM,EAAE;IACf,MAAMC,CAAC,GAAGH,IAAI,CAACE,MAAM;IACrB,MAAME,GAAG,GAAG;MAAEC,YAAY,EAAE;IAAK,CAAC;IAClC,MAAMC,IAAI,GAAGH,CAAC,CAACI,KAAK,IAAIJ,CAAC,CAACK,IAAI,GAAGL,CAAC,CAACI,KAAK,CAACH,GAAG,CAAC,GAAGD,CAAC,CAACM,QAAQ,CAACL,GAAG,CAAC;IAE/D,OAAQ,GAAEE,IAAK,IAAGL,GAAI,EAAC;EACzB,CAAC,MAAM;IACL;IACA,OAAOD,IAAI,CAACU,OAAO,CAACC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,GAAI,IAAGV,GAAI,EAAC;EACrD;AACF,CAAC;AAEDW,MAAM,CAACC,OAAO,GAAGd,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}