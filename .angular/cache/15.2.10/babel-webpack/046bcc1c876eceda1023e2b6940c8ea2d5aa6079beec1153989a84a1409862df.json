{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  get token() {\n    return '';\n  }\n  login(user) {\n    return this.http.post(https); //identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=, user)\n  }\n\n  logout() {}\n  isAuthenticated() {\n    return !!this.token;\n  }\n  setToken() {}\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac\n  });\n}","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EAEvC,IAAIC,KAAK;IACP,OAAO,EAAE;EACX;EAEAC,KAAK,CAACC,IAAU;IACd,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAACC,KAAK,CAAC;EAC9B;;EAEAC,MAAM,IAEN;EAEAC,eAAe;IACb,OAAO,CAAC,CAAC,IAAI,CAACN,KAAK;EACrB;EAEQO,QAAQ,IAEhB;EAAC;qBArBUV,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAW,SAAXX,WAAW;EAAA","names":["AuthService","constructor","http","token","login","user","post","https","logout","isAuthenticated","setToken","factory"],"sourceRoot":"","sources":["I:\\Angular\\angular-blog\\src\\app\\admin\\shared\\services\\auth.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {User} from '../../../shared/interfaces';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  get token(): string {\r\n    return ''\r\n  }\r\n\r\n  login(user: User): Observable<any> {\r\n    return this.http.post(https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=, user)\r\n  }\r\n\r\n  logout() {\r\n\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return !!this.token\r\n  }\r\n\r\n  private setToken() {\r\n\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}