{"ast":null,"code":"import { switchMap } from 'rxjs/operators';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../shared/posts.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"ngx-quill\";\nfunction EditPageComponent_div_0_div_6_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditPageComponent_div_0_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, EditPageComponent_div_0_div_6_small_1_Template, 2, 0, \"small\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r3.form.get(\"title\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    invalid: a0\n  };\n};\nfunction EditPageComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 2);\n    i0.ɵɵlistener(\"ngSubmit\", function EditPageComponent_div_0_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.submit());\n    });\n    i0.ɵɵelementStart(2, \"div\", 3)(3, \"label\", 4);\n    i0.ɵɵtext(4, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 5);\n    i0.ɵɵtemplate(6, EditPageComponent_div_0_div_6_Template, 2, 1, \"div\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 7);\n    i0.ɵɵelement(8, \"quill-editor\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 9);\n    i0.ɵɵtext(10, \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c0, ((tmp_1_0 = ctx_r0.form.get(\"title\")) == null ? null : tmp_1_0.touched) && ((tmp_1_0 = ctx_r0.form.get(\"title\")) == null ? null : tmp_1_0.invalid)));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r0.form.get(\"title\")) == null ? null : tmp_2_0.touched) && ((tmp_2_0 = ctx_r0.form.get(\"title\")) == null ? null : tmp_2_0.invalid));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.form.invalid);\n  }\n}\nfunction EditPageComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 12);\n    i0.ɵɵtext(1, \"\\u0418\\u0434\\u0435\\u0442 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class EditPageComponent {\n  constructor(router, route, postsService) {\n    this.router = router;\n    this.route = route;\n    this.postsService = postsService;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.route.params.pipe(switchMap(params => {\n      return this.postsService.getById(params['id']);\n    })).subscribe(post => {\n      this.post = post;\n      this.form = new FormGroup({\n        title: new FormControl(post.title, Validators.required),\n        text: new FormControl(post.text, Validators.required)\n      });\n    });\n  }\n  ngOnDestroy() {\n    if (this.uSub) {\n      this.uSub.unsubscribe();\n    }\n  }\n  submit() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.submitted = true;\n    this.uSub = this.postsService.update({\n      ...this.post,\n      text: this.form.value.text,\n      title: this.form.value.title\n    }).subscribe(() => {\n      this.router.navigate(['/admin', 'dashboard']);\n      this.submitted = false;\n    });\n  }\n  static #_ = this.ɵfac = function EditPageComponent_Factory(t) {\n    return new (t || EditPageComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PostsService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditPageComponent,\n    selectors: [[\"app-edit-page\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[4, \"ngIf\", \"ngIfElse\"], [\"loading\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-control\", 3, \"ngClass\"], [\"for\", \"title\"], [\"id\", \"title\", \"type\", \"text\", \"formControlName\", \"title\"], [\"class\", \"validation\", 4, \"ngIf\"], [1, \"form-control\"], [\"formControlName\", \"text\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"validation\"], [4, \"ngIf\"], [1, \"text-center\"]],\n    template: function EditPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, EditPageComponent_div_0_Template, 11, 6, \"div\", 0);\n        i0.ɵɵtemplate(1, EditPageComponent_ng_template_1_Template, 2, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.form)(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.QuillEditorComponent],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAGA,SAAQA,SAAS,QAAO,gBAAgB;AAExC,SAAQC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAO,gBAAgB;;;;;;;;;ICOzDC,6BAAuD;IACrDA,4IACF;IAAAA,iBAAQ;;;;;IANVA,+BAGC;IACCA,mFAEQ;IACVA,iBAAM;;;;;IAHIA,eAA6C;IAA7CA,uIAA6C;;;;;;;;;;;IAZ7DA,2BAAgC;IACLA;MAAAA;MAAA;MAAA,OAAYA,8BAAQ;IAAA,EAAC;IAC5CA,8BAGC;IACoBA,gGAAe;IAAAA,iBAAQ;IAC1CA,2BAAsD;IACtDA,wEAOM;IACRA,iBAAM;IAENA,8BAA0B;IACxBA,kCAAoD;IACtDA,iBAAM;IAENA,iCAIC;IAAAA,iEAAQ;IAAAA,iBAAS;;;;;;IAzBdA,eAAkB;IAAlBA,uCAAkB;IAGpBA,eAA+E;IAA/EA,wMAA+E;IAK5EA,eAA8D;IAA9DA,yKAA8D;IAgBjEA,eAAyB;IAAzBA,8CAAyB;;;;;IAM7BA,6BAAuB;IAAAA,4FAAgB;IAAAA,iBAAI;;;ADlB7C,OAAM,MAAOC,iBAAiB;EAO5BC,YACUC,MAAc,EACdC,KAAqB,EACrBC,YAA0B;IAF1B,WAAM,GAANF,MAAM;IACN,UAAK,GAALC,KAAK;IACL,iBAAY,GAAZC,YAAY;IANtB,cAAS,GAAG,KAAK;EAQjB;EAEAC,QAAQ;IACN,IAAI,CAACF,KAAK,CAACG,MAAM,CAACC,IAAI,CACpBZ,SAAS,CAAEW,MAAc,IAAI;MAC3B,OAAO,IAAI,CAACF,YAAY,CAACI,OAAO,CAACF,MAAM,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC,CAAC,CACH,CAACG,SAAS,CAAEC,IAAU,IAAI;MACzB,IAAI,CAACA,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACC,IAAI,GAAG,IAAId,SAAS,CAAC;QACxBe,KAAK,EAAE,IAAIhB,WAAW,CAACc,IAAI,CAACE,KAAK,EAAEd,UAAU,CAACe,QAAQ,CAAC;QACvDC,IAAI,EAAE,IAAIlB,WAAW,CAACc,IAAI,CAACI,IAAI,EAAEhB,UAAU,CAACe,QAAQ;OACrD,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAE,WAAW;IACT,IAAI,IAAI,CAACC,IAAI,EAAE;MACb,IAAI,CAACA,IAAI,CAACC,WAAW,EAAE;;EAE3B;EAEAC,MAAM;IACJ,IAAI,IAAI,CAACP,IAAI,CAACQ,OAAO,EAAE;MACrB;;IAGF,IAAI,CAACC,SAAS,GAAG,IAAI;IAErB,IAAI,CAACJ,IAAI,GAAG,IAAI,CAACZ,YAAY,CAACiB,MAAM,CAAC;MACnC,GAAG,IAAI,CAACX,IAAI;MACZI,IAAI,EAAE,IAAI,CAACH,IAAI,CAACW,KAAK,CAACR,IAAI;MAC1BF,KAAK,EAAE,IAAI,CAACD,IAAI,CAACW,KAAK,CAACV;KACxB,CAAC,CAACH,SAAS,CAAC,MAAK;MAChB,IAAI,CAACP,MAAM,CAACqB,QAAQ,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;MAC7C,IAAI,CAACH,SAAS,GAAG,KAAK;IACxB,CAAC,CAAC;EACJ;EAAC;qBAjDUpB,iBAAiB;EAAA;EAAA;UAAjBA,iBAAiB;IAAAwB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCb9B7B,mEA4BM;QAENA,mHAEc;;;;QAhCRA,+BAAY","names":["switchMap","FormControl","FormGroup","Validators","i0","EditPageComponent","constructor","router","route","postsService","ngOnInit","params","pipe","getById","subscribe","post","form","title","required","text","ngOnDestroy","uSub","unsubscribe","submit","invalid","submitted","update","value","navigate","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["I:\\Angular\\angular-blog\\src\\app\\admin\\edit-page\\edit-page.component.ts","I:\\Angular\\angular-blog\\src\\app\\admin\\edit-page\\edit-page.component.html"],"sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\nimport {PostsService} from '../../shared/posts.service';\nimport {switchMap} from 'rxjs/operators';\nimport {Post} from '../../shared/interfaces';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-edit-page',\n  templateUrl: './edit-page.component.html',\n  styleUrls: ['./edit-page.component.scss']\n})\nexport class EditPageComponent implements OnInit, OnDestroy {\n\n  form!: FormGroup\n  post!: Post\n  submitted = false\n  uSub!: Subscription\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private postsService: PostsService\n  ) {\n  }\n\n  ngOnInit() {\n    this.route.params.pipe(\n      switchMap((params: Params) => {\n        return this.postsService.getById(params['id'])\n      })\n    ).subscribe((post: Post) => {\n      this.post = post\n      this.form = new FormGroup({\n        title: new FormControl(post.title, Validators.required),\n        text: new FormControl(post.text, Validators.required)\n      })\n    })\n  }\n\n  ngOnDestroy() {\n    if (this.uSub) {\n      this.uSub.unsubscribe()\n    }\n  }\n\n  submit() {\n    if (this.form.invalid) {\n      return\n    }\n\n    this.submitted = true\n\n    this.uSub = this.postsService.update({\n      ...this.post,\n      text: this.form.value.text,\n      title: this.form.value.title\n    }).subscribe(() => {\n      this.router.navigate(['/admin', 'dashboard'])\n      this.submitted = false\n    })\n  }\n}\n","<div *ngIf=\"form; else loading\">\n  <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n    <div\n      class=\"form-control\"\n      [ngClass]=\"{invalid: form.get('title')?.touched && form.get('title')?.invalid}\"\n    >\n      <label for=\"title\">Название поста:</label>\n      <input id=\"title\" type=\"text\" formControlName=\"title\">\n      <div\n        *ngIf=\"form.get('title')?.touched && form.get('title')?.invalid\"\n        class=\"validation\"\n      >\n        <small *ngIf=\"form.get('title')?.errors?.['required']\">\n          Введите название поста\n        </small>\n      </div>\n    </div>\n\n    <div class=\"form-control\">\n      <quill-editor formControlName=\"text\"></quill-editor>\n    </div>\n\n    <button\n      class=\"btn btn-primary\"\n      type=\"submit\"\n      [disabled]=\"form.invalid\"\n    >Обновить</button>\n  </form>\n</div>\n\n<ng-template #loading>\n  <p class=\"text-center\">Идет загрузка...</p>\n</ng-template>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}